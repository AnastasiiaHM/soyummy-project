{"version":3,"file":"static/js/562.e83333cc.chunk.js","mappings":"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","sources":["components/RecipesGallery/RecipeCard/RecipeCardStyled.jsx","components/RecipesGallery/RecipeCard/RecipeCard.jsx","components/RecipesGallery/RecipesGalleryStyled.jsx","components/ShopingList/ShopingList.styled.jsx","components/ShopingList/ShoppingListEmpty/ShoppingListEmpty.styled.jsx","components/ShopingList/ShoppingListEmpty/ShoppingListEmpty.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","components/SearchSelector/SearchSelector.styled.jsx","components/SearchSelector/SearchSelector.jsx","components/SearchBar/SearchBar.jsx","redux/search/selector.js","components/SearchedRecipesList/SearchedRecipesList.jsx","pages/Search.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { mediaSizes } from '../../constants/media';\nimport { colors } from 'components/colors';\nimport { NavLink } from 'react-router-dom';\n\nexport const RecipeCardStyled = styled.li`\n  position: relative;\n  border-radius: 8px;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  max-width: 343px;\n  margin: 0;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    max-width: 336px;\n  }\n\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    max-width: 300px;\n  }\n\n  .image {\n    /* object-fit: cover; */\n    box-sizing: border-box;\n    -webkit-transform: scale(1);\n    transform: scale(1);\n    -webkit-transition: 0.5s ease-in-out;\n    transition: 0.3s ease-in-out;\n    &:hover {\n      cursor: pointer;\n      -webkit-transform: scale(1.2);\n      transform: scale(1.2);\n    }\n  }\n  /* 11 */\n  .name {\n    position: absolute;\n    bottom: 26px;\n    left: 18px;\n    background: ${colors.whiteColor};\n    border-radius: 8px;\n    font-style: normal;\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 20px;\n    letter-spacing: -0.24px;\n    color: ${colors.recipeCardText};\n    padding: 16px 16px;\n    width: 268px;\n\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      bottom: 24px;\n      left: 16px;\n    }\n  }\n`;\nexport const StyledLink = styled(NavLink)`\n  display: flex;\n  width: 100%;\n  gap: 12px;\n`;\n","import React from 'react';\nimport { RecipeCardStyled, StyledLink } from './RecipeCardStyled';\n\nexport const RecipeCard = ({ recipe, location }) => {\n  const uppPageHandler = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n  return (\n    <RecipeCardStyled onClick={uppPageHandler}>\n      <StyledLink to={`/recipe/${recipe._id}`} state={{ from: location }}>\n        <img className=\"image\" src={recipe.preview} alt=\"dish-card\" />\n        <p className=\"name\">{recipe.title}</p>\n      </StyledLink>\n    </RecipeCardStyled>\n  );\n};\n","import styled from '@emotion/styled';\nimport { mediaSizes } from '../constants/media';\n\nexport const RecipesGalleryStyled = styled.ul`\n  display: flex;\n  gap: 28px;\n  justify-items: center;\n  justify-content: center;\n  padding-top: 32px;\n  padding-bottom: 50px;\n  flex-wrap: wrap;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    gap: 32px;\n    padding-top: 50px;\n    padding-bottom: 100px;\n  }\n\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    grid-column-gap: 14px;\n    grid-row-gap: 100px;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { mediaSizes } from 'components/constants';\n\nimport { colors } from 'components/colors';\n\nexport const Section = styled.section`\n  width: 375px;\n  max-width: 100%;\n\n  padding-bottom: 100px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  margin-left: auto;\n  margin-right: auto;\n\n  @media (min-width: 768px) and (max-width: 1439px) {\n    width: 768px;\n\n    padding-bottom: 200px;\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n\n  @media (min-width: 1440px) {\n    width: 1440px;\n\n    padding-top: 66px;\n    padding-bottom: 195px;\n    padding-left: 100px;\n    padding-right: 100px;\n  }\n`;\n\nexport const Title = styled.div`\n  font-weight: 600;\n  font-size: 28px;\n  line-height: 1;\n  color: ${colors.titleColor};\n  padding-bottom: 50px;\n  margin-top: 50px;\n  margin-left: 0;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    font-size: 32px;\n    padding-bottom: 72px;\n    margin-top: 72px;\n  }\n\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    font-size: 44px;\n    margin-top: 100px;\n    padding-bottom: 100px;\n  }\n`;\n\nexport const List = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  background-color: ${colors.greenButton};\n  color: ${colors.textGreenBtn};\n\n  filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\n  border-radius: 8px;\n\n  list-style: none;\n  font-weight: 600;\n  font-size: 12px;\n\n  padding: 10px;\n  margin-bottom: 32px;\n\n  @media (min-width: 768px) and (max-width: 1439px) {\n    filter: none;\n\n    font-size: 18px;\n    letter-spacing: 0.03em;\n\n    padding: 20px;\n    margin-bottom: 50px;\n  }\n\n  @media (min-width: 1440px) {\n    filter: none;\n    font-size: 18px;\n\n    padding: 21px 40px;\n    margin-bottom: 50px;\n  }\n`;\n\nexport const ListWraper = styled.div`\n  display: flex;\n  gap: 24px;\n\n  @media (min-width: 768px) and (max-width: 1439px) {\n    gap: 78px;\n  }\n\n  @media (min-width: 1440px) {\n    gap: 142px;\n  }\n`;\n\nexport const ItemsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n\n  @media (min-width: 768px) {\n    gap: 44px;\n  }\n\n  @media (min-width: 1440px) {\n    width: 1160px;\n\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\n","import styled from '@emotion/styled';\n\nimport { colors } from 'components/colors';\n\nexport const Wraper = styled.div`\n  padding-top: 50px;\n  padding-bottom: 100px;\n\n  @media (min-width: 768px) and (max-width: 1439px) {\n    padding-bottom: 200px;\n  }\n`;\n\nexport const EmptyImageWrapper = styled.div`\n  padding-bottom: 24px;\n  width: 208px;\n  margin: 0 auto;\n\n  @media (min-width: 768px) {\n    padding-bottom: 32px;\n    width: 350px;\n  }\n`;\n\nexport const EmptyDesc = styled.p`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1;\n  letter-spacing: -0.02em;\n  font-feature-settings: 'liga' off;\n  text-align: center;\n\n  color: ${colors.blackFontBolt};\n\n  opacity: 0.5;\n\n  @media (min-width: 768px) {\n    font-size: 24px;\n  }\n`;\n","import {\n  EmptyDesc,\n  EmptyImageWrapper,\n  Wraper,\n} from './ShoppingListEmpty.styled';\n\nimport notFoundMobX1 from '../../images/not-found/search-not-found-mob-1x.png';\nimport notFoundMobX2 from '../../images/not-found/search-not-found-mob-2x.png';\n\nimport notFoundTabX1 from '../../images/not-found/search-not-found-tb-1x.png';\nimport notFoundTabX2 from '../../images/not-found/search-not-found-tb-2x.png';\n\nimport notFoundDescX1 from '../../images/not-found/searchNotFound1x.png';\nimport notFoundDescX2 from '../../images/not-found/search-not-found-desc-2x.png';\n\nexport const ShoppingListEmpty = ({ message }) => {\n  return (\n    <Wraper>\n      <EmptyImageWrapper>\n        <picture>\n          <source\n            media=\"(max-width: 767px)\"\n            srcSet={`${notFoundMobX1} 1x, ${notFoundMobX2} 2x`}\n          />\n          <source\n            media=\"(min-width: 768px) and (max-width: 1439px)\"\n            srcSet={`${notFoundTabX1} 1x, ${notFoundTabX2} 2x`}\n          />\n          <source\n            media=\"(min-width: 1440px)\"\n            srcSet={`${notFoundDescX1} 1x, ${notFoundDescX2} 2x`}\n          />\n          <img src={notFoundDescX1} alt=\"not found product\" />\n        </picture>\n      </EmptyImageWrapper>\n      <EmptyDesc>{message}</EmptyDesc>\n    </Wraper>\n  );\n};\n","import styled from '@emotion/styled';\nimport { colors } from '../colors';\nimport {mediaSizes} from '../constants/media'\n\nexport const SearchSection = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const SearchLabel = styled.label`\n  position: relative;\n`;\n\nexport const SearchedForm = styled.form`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\n\nexport const SearchInput = styled.input`\n  width: 295px;\n  height: 52px;\n  position: relative;\n  background: ${colors.textGreenBtn};\n  border: 1px solid ${colors.border};\n  outline: none;\n  border-radius: 15px 50px;\n  padding-top: 17px;\n  padding-right: 113px;\n  padding-bottom: 17px;\n  padding-left: 32px;\n  margin-bottom: 28px;\n  ::placeholder {\n    color: ${colors.placeholder};\n  }\n  &:not(:placeholder-shown) {\n    font-weight: 500;\n    font-size: 12px;\n    line-height: 1.6;\n    color: #898a8daf;\n    @media (min-width: 768px) {\n      font-size: 16px;\n    }\n  }\n  @media (min-width: 768px) {\n    width: 362px;\n    height: 57px;\n  }\n  @media (min-width: 1440px) {\n    width: 510px;\n    height: 70px;\n  }\n`;\nexport const SearchBtn = styled.button`\n  position: absolute;\n  right: 0;\n  width: 113px;\n  background-color: #ccc;\n  border: none;\n  border-radius: 0 5px 5px 0;\n  cursor: pointer;\n  color: ${colors.whiteColor};\n  font-weight: bold;\n  background: ${colors.greenButton};\n  height: 51px;\n  border-radius: 15px 50px;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.5;\n  color: ${colors.textGreenBtn};\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: ${colors.darkButton};\n  }\n  @media (min-width: 768px) {\n    width: 161px;\n    height: 57px;\n    top: 0;\n    left: 56%;\n    bottom: 0;\n  }\n  @media (min-width: 1440px) {\n    width: 161px;\n    height: 70px;\n    top: 0;\n    left: 69%;\n    bottom: 0;\n  }\n`;\n\nexport const StyledTitle = styled.h2`\n  display: block;\n  margin-left: 0;\n  margin-bottom: 50px;\n  width: 100%;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    margin-bottom: 40px;\n  }\n\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    margin-top: 100px;\n  }\n`;","import { useEffect, useState } from 'react';\nimport {\n  SearchBtn,\n  SearchInput,\n  SearchLabel,\n  SearchedForm,\n} from './SearchForm.styled';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { useDispatch } from 'react-redux';\nimport { changeItems, changeQuery } from 'redux/search/slice';\n\nexport const SearchForm = () => {\n  const [searchParam, setSearchParam] = useSearchParams();\n  const value = searchParam.get('query');\n  const [searchQuery, setSearchQuery] = useState(value || '');\n\n  const dispatch = useDispatch();\n\n  const query = searchQuery.toLowerCase();\n\n  function handleInputChange(e) {\n    console.log('fetch');\n    setSearchQuery(e.target.value);\n  }\n  useEffect(() => {\n    if (!value) {\n      dispatch(changeQuery(''));\n      dispatch(changeItems(null));\n      return;\n    }\n    console.log('fetch');\n    dispatch(changeQuery(value));\n  }, [dispatch, value]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (query === '') {\n      console.log('fetch');\n      dispatch(changeQuery(''));\n      dispatch(changeItems(null));\n      return;\n    }\n    setSearchParam({ query });\n    console.log('fetch');\n    if (!value) {\n      dispatch(changeItems([]));\n      return;\n    }\n    dispatch(changeQuery(value));\n\n    setSearchQuery(query);\n    console.log('fetch');\n    dispatch(changeQuery(searchQuery));\n  }\n  return (\n    <SearchedForm onSubmit={handleSubmit}>\n      <SearchLabel>\n        <SearchInput\n          name=\"search\"\n          type=\"text\"\n          value={searchQuery}\n          autoComplete=\"off\"\n          minLength={1}\n          autoFocus\n          placeholder=\"Search..\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example beef, pork..\"\n          onChange={handleInputChange}\n        />\n\n        <SearchBtn type=\"submit\">Search</SearchBtn>\n      </SearchLabel>\n    </SearchedForm>\n  );\n};\n","import styled from '@emotion/styled';\nimport { colors } from '../colors';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  margin-bottom: 50px;\n`;\n\nexport const Label = styled.label`\n  padding-right: 18px;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 1.3;\n  letter-spacing: -0.24px;\n\n  color: #001833;\n`;\nexport const Section = styled.section`\n  margin-top: 50px;\n  @media (min-width: 768px) {\n    margin-top: 72px;\n  }\n  @media (min-width: 1440px) {\n    margin-top: 100px;\n  }\n`;\n\nexport const SectionLabel = styled.select`\n  width: 146px;\n  padding: 8px 14px;\n  color: ${colors.color1};\n  font-size: 12px;\n  line-height: 18px;\n  letter-spacing: -0.02em;\n  border: none;\n  appearance: none;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  outline: none;\n  border-radius: 6px;\n  background-color: #d9d9d975;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='20' height='20' fill='none'%3E%3Cpath stroke='%238BAA36' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m5 7 5 5 5-5'/%3E%3C/svg%3E\");\n  background-position: right 14px center;\n  background-repeat: no-repeat;\n\n  position: relative;\n\n  @media (min-width: 768px) {\n    width: 175px;\n    padding: 10px 14px;\n    font-size: 14px;\n    line-height: 21px;\n  }\n  @media (min-width: 1440px) {\n    width: 198px;\n    padding: 14px;\n  }\n`;\n\nexport const Options = styled.option`\n  color: ${colors.color1};\n  background-color: #d9d9d975;\n`;\n\nexport const TitleDropdpwn = styled.label`\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 24px;\n\n  letter-spacing: -0.24px;\n\n  color: ${colors.titleColor};\n\n  @media (min-width: 768px) {\n    font-size: 14px;\n    top: 29%;\n    left: 25%;\n  }\n\n  @media (min-width: 1440px) {\n    font-size: 18px;\n    top: 26%;\n    left: 34%;\n  }\n`;\n\nexport const DropdownWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 15px;\n  text-align: center;\n  margin-bottom: 90px;\n  color: ${colors.color1};\n`;\n","import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { changeQueryType } from 'redux/search/slice';\nimport { useLocation } from 'react-router-dom';\nimport { SectionLabel, Wrapper, Options, Label } from './SearchSelector.styled';\n\nconst typesList = [{ searchType: 'title' }, { searchType: 'ingredients' }];\n\nexport const SearchSelector = () => {\n  const location = useLocation();\n\n  const [currentValue, setCurrentValue] = useState(\n    location.state?.from || 'title'\n  );\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(changeQueryType(currentValue));\n  }, [dispatch, currentValue]);\n  const changeType = e => {\n    const type = e.target.value;\n    setCurrentValue(type);\n  };\n\n  return (\n    <Wrapper>\n      <Label htmlFor=\"select\">Search by:</Label>\n      <SectionLabel\n        name=\"select\"\n        value={currentValue}\n        onChange={e => changeType(e)}\n      >\n        {typesList.map(({ searchType }) => (\n          <Options key={searchType} value={searchType}>\n            {searchType}\n          </Options>\n        ))}\n      </SectionLabel>\n    </Wrapper>\n  );\n};\n","import { SearchForm } from 'components/SearchForm/SearchForm';\nimport { SearchSelector } from 'components/SearchSelector/SearchSelector';\n\nexport const SearchBar = () => {\n  return (\n    <div>\n      <SearchForm />\n      <SearchSelector />\n    </div>\n  );\n};\n","export const selectSearchedRecipes = state => state.search.items;\nexport const selectIsLoading = state => state.search.isLoading;\nexport const selectError = state => state.search.error;\nexport const selectQueryType = state => state.search.queryType;\nexport const selectQuery = state => state.search.query;\n","import React, { useEffect } from 'react';\nimport { RecipesGalleryStyled } from 'components/RecipesGallery/RecipesGalleryStyled';\nimport { RecipeCard } from 'components/RecipesGallery/RecipeCard/RecipeCard';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectError, selectIsLoading } from 'redux/search/selector';\nimport { Loader } from 'components/Loader/Loader';\nimport { changeItems, resetState } from 'redux/search/slice';\n\nexport const SearchRecipesList = ({ recipes, location }) => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(resetState());\n    dispatch(changeItems([]));\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoading && !error && <Loader />}\n      <RecipesGalleryStyled>\n        {recipes?.map(recipe => (\n          <RecipeCard key={recipe._id} recipe={recipe} location={location} />\n        ))}\n      </RecipesGalleryStyled>\n    </>\n  );\n};\n","import { SearchBar } from 'components/SearchBar/SearchBar';\nimport { useEffect } from 'react';\nimport {\n  getRecipesByQuery,\n  getRecipesByIngredient,\n} from 'redux/search/operation';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectQuery,\n  selectQueryType,\n  selectSearchedRecipes,\n} from 'redux/search/selector';\nimport { SearchRecipesList } from 'components/SearchedRecipesList/SearchedRecipesList';\nimport { ShoppingListEmpty } from 'components/ShopingList/ShoppingListEmpty/ShoppingListEmpty';\nimport { StyledTitle } from 'components/SearchForm/SearchForm.styled';\nimport { changeExample, changeItems, changeQuery } from 'redux/search/slice';\nimport { Section } from 'components/ShopingList/ShopingList.styled';\n\nconst Search = () => {\n  const query = useSelector(selectQuery);\n  const queryType = useSelector(selectQueryType);\n  const recipes = useSelector(selectSearchedRecipes);\n  const dispatch = useDispatch();\n  const placeholder = useSelector(state => state.search.example);\n\n  useEffect(() => {\n    console.log('fetch');\n    if (query === '') {\n      console.log('fetch');\n      dispatch(changeItems(null));\n      dispatch(changeQuery(''));\n      return;\n    }\n    console.log('fetch');\n    dispatch(changeExample(false));\n    dispatch(changeItems(null));\n  }, [dispatch, query]);\n\n  useEffect(() => {\n    if (query === '') {\n      dispatch(changeItems(null));\n      dispatch(changeQuery(''));\n      return;\n    }\n    switch (queryType) {\n      case 'title':\n        console.log('fetch');\n\n        dispatch(getRecipesByQuery(query));\n\n        break;\n      case 'ingredients':\n        console.log('fetch');\n        dispatch(getRecipesByIngredient(query));\n        break;\n      default:\n        return;\n    }\n  }, [dispatch, query, queryType]);\n\n  return (\n    <Section>\n      <StyledTitle className=\"title\">Search</StyledTitle>\n\n      <SearchBar />\n      {placeholder && (\n        <ShoppingListEmpty message={'Try looking for something else..'} />\n      )}\n      <SearchRecipesList recipes={recipes} />\n    </Section>\n  );\n};\n\nexport default Search;\n"],"names":["RecipeCardStyled","styled","mediaSizes","colors","StyledLink","NavLink","RecipeCard","recipe","location","onClick","window","scrollTo","top","behavior","to","_id","state","from","className","src","preview","alt","title","RecipesGalleryStyled","Section","Title","List","ListWraper","ItemsWrapper","Wraper","EmptyImageWrapper","EmptyDesc","ShoppingListEmpty","message","media","srcSet","notFoundMobX1","notFoundMobX2","notFoundTabX1","notFoundTabX2","notFoundDescX1","notFoundDescX2","SearchLabel","SearchedForm","SearchInput","SearchBtn","StyledTitle","SearchForm","useSearchParams","searchParam","setSearchParam","value","get","useState","searchQuery","setSearchQuery","dispatch","useDispatch","query","toLowerCase","useEffect","changeQuery","changeItems","console","log","onSubmit","e","preventDefault","name","type","autoComplete","minLength","autoFocus","placeholder","onChange","target","Wrapper","Label","SectionLabel","Options","typesList","searchType","SearchSelector","useLocation","currentValue","setCurrentValue","changeQueryType","htmlFor","changeType","map","SearchBar","selectSearchedRecipes","search","items","selectIsLoading","isLoading","selectError","error","selectQueryType","queryType","selectQuery","SearchRecipesList","recipes","useSelector","resetState","Loader","example","changeExample","getRecipesByQuery","getRecipesByIngredient"],"sourceRoot":""}