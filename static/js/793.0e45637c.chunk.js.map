{"version":3,"file":"static/js/793.0e45637c.chunk.js","mappings":"oOA4DA,UAnDiB,WACf,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GACEC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,eAAV,IADbC,EAAN,EAAMA,QAASC,EAAf,EAAeA,WAAYC,EAA3B,EAA2BA,YAAaC,EAAxC,EAAwCA,QAASC,EAAjD,EAAiDA,MAAOC,EAAxD,EAAwDA,aAExD,GAAgDC,EAAAA,EAAAA,WAAS,GAAzD,eAAOC,EAAP,KAAyBC,EAAzB,KAcA,IAZAC,EAAAA,EAAAA,YAAU,WACRd,GAASe,EAAAA,EAAAA,IAAqB,GAC/B,GAAE,CAACf,KAEJc,EAAAA,EAAAA,YAAU,WACJF,GACFZ,GAASe,EAAAA,EAAAA,IAAqBR,IAGhCM,GAAoB,EACrB,GAAE,CAACN,EAAaK,EAAkBZ,IAE/BS,EACF,OACE,UAAC,KAAD,uDAC4CA,EAAMO,WAKtD,IAIMC,EAAgB,mCAAG,WAAMC,GAAN,iFACjBlB,GAASmB,EAAAA,EAAAA,IAAqBD,IADb,OAEvBL,GAAoB,GAFG,2CAAH,sDAKtB,OACE,SAAC,KAAD,WACE,SAAC,IAAD,CACEO,KAAMf,EACNgB,SAAS,YACTf,WAAYA,EACZgB,KAAMf,EACNC,QAASA,EACTE,aAAcA,EACda,WAlBmB,SAAAD,GACvBtB,GAASe,EAAAA,EAAAA,IAAqBO,GAC/B,EAiBKE,WAAYP,KAInB,C","sources":["pages/Favorite/Favorite.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  deleteFavoriteRecipe,\n  fetchFavoriteRecipes,\n} from 'redux/favorite/operations';\nimport { Message, RecipesContainer } from './Favorite.styled';\nimport RecipesList from 'components/Favorite/FavoriteList';\n\nconst Favorite = () => {\n  const dispatch = useDispatch();\n  let { recipes, totalPages, currentPage, loading, error, itemsPerPage } =\n    useSelector(state => state.favoriteRecipes);\n  const [deletePageChange, setDeletePageChange] = useState(false);\n\n  useEffect(() => {\n    dispatch(fetchFavoriteRecipes(1));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (deletePageChange) {\n      dispatch(fetchFavoriteRecipes(currentPage));\n    }\n\n    setDeletePageChange(false);\n  }, [currentPage, deletePageChange, dispatch]);\n\n  if (error) {\n    return (\n      <Message>\n        Error while retrieving favorite recipes: {error.message}\n      </Message>\n    );\n  }\n\n  const handlePageChange = page => {\n    dispatch(fetchFavoriteRecipes(page));\n  };\n\n  const handleCardDelete = async recipeId => {\n    await dispatch(deleteFavoriteRecipe(recipeId));\n    setDeletePageChange(true);\n  };\n\n  return (\n    <RecipesContainer>\n      <RecipesList\n        list={recipes}\n        listName=\"Favorites\"\n        totalPages={totalPages}\n        page={currentPage}\n        loading={loading}\n        itemsPerPage={itemsPerPage}\n        pageChange={handlePageChange}\n        deleteCard={handleCardDelete}\n      />\n    </RecipesContainer>\n  );\n};\n\nexport default Favorite;\n"],"names":["dispatch","useDispatch","useSelector","state","favoriteRecipes","recipes","totalPages","currentPage","loading","error","itemsPerPage","useState","deletePageChange","setDeletePageChange","useEffect","fetchFavoriteRecipes","message","handleCardDelete","recipeId","deleteFavoriteRecipe","list","listName","page","pageChange","deleteCard"],"sourceRoot":""}