{"version":3,"file":"static/js/546.08ea91be.chunk.js","mappings":"0LAGaA,EAAgBC,EAAAA,EAAAA,IAAH,uGACfC,EAAAA,EAAAA,O,SCMX,EARgB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACjB,OACE,SAACH,EAAD,WACE,yBAAIG,EAAJ,SAGL,C,mLCJYC,EAAqBH,EAAAA,EAAAA,IAAH,4qBACTC,EAAAA,EAAAA,YAOYG,EAAAA,EAAAA,OAUVH,EAAAA,EAAAA,YAIXA,EAAAA,EAAAA,aAKEA,EAAAA,EAAAA,WAGqBG,EAAAA,EAAAA,QAMvBC,EAAUL,EAAAA,EAAAA,EAAH,sPAKTC,EAAAA,EAAAA,aAGuBG,EAAAA,EAAAA,QAMrBE,EAAaN,EAAAA,EAAAA,IAAH,mLAMWI,EAAAA,EAAAA,QAKrBG,EAAcP,EAAAA,EAAAA,IAAH,uvEAOVC,EAAAA,EAAAA,aAOEA,EAAAA,EAAAA,MAKAA,EAAAA,EAAAA,QAKFA,EAAAA,EAAAA,aAGEA,EAAAA,EAAAA,MAKAA,EAAAA,EAAAA,QAKoBG,EAAAA,EAAAA,OAaAA,EAAAA,EAAAA,OAKrBH,EAAAA,EAAAA,MAIAA,EAAAA,EAAAA,QAWFA,EAAAA,EAAAA,aAUaA,EAAAA,EAAAA,WAIAA,EAAAA,EAAAA,MAKAA,EAAAA,EAAAA,QAGUG,EAAAA,EAAAA,OAQrBH,EAAAA,EAAAA,aAMAA,EAAAA,EAAAA,WAMCA,EAAAA,EAAAA,WACFA,EAAAA,EAAAA,WACCA,EAAAA,EAAAA,WACOA,EAAAA,EAAAA,WASVA,EAAAA,EAAAA,MAMwBG,EAAAA,EAAAA,OASxBH,EAAAA,EAAAA,Q,qNC3IZ,EAxDwBD,EAAAA,EAAAA,IAAH,stCAGCC,EAAAA,EAAAA,aACIO,E,imHAWQJ,EAAAA,EAAAA,OAOAA,EAAAA,EAAAA,QACNK,E,yoKAaQL,EAAAA,EAAAA,QAOvBH,EAAAA,EAAAA,a,oHC/CAS,EAAoBV,EAAAA,EAAAA,IAAH,+GAOjBW,EAAkBX,EAAAA,EAAAA,IAAH,uWAcfY,EAAgBZ,EAAAA,EAAAA,IAAH,giBAOQI,EAAAA,EAAAA,OAIAA,EAAAA,EAAAA,SAiBrBS,EAAWb,EAAAA,EAAAA,IAAH,2bAYaI,EAAAA,EAAAA,OAIAA,EAAAA,EAAAA,SAMrBU,EAAWd,EAAAA,EAAAA,OAAH,mdAcaI,EAAAA,EAAAA,OAKAA,EAAAA,EAAAA,SAOrBW,EAAef,EAAAA,EAAAA,IAAH,mNAaZgB,GAAWhB,EAAAA,EAAAA,GAAOiB,EAAAA,IAAPjB,CAAH,8OAIaI,EAAAA,EAAAA,OAIAA,EAAAA,EAAAA,SAMrBc,EAAelB,EAAAA,EAAAA,EAAH,mrBAiBSI,EAAAA,EAAAA,OAWAA,EAAAA,EAAAA,SAUrBe,EAAUnB,EAAAA,EAAAA,KAAH,iE,uJCvJPoB,EAAa,WACxB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,UAAf,IAIpC,OACE,SAACZ,EAAD,WACE,UAACD,EAAD,YACE,SAACE,EAAD,CAAee,IAAKC,EAAgBC,IAAI,MACxC,UAACd,EAAD,YACE,SAACF,EAAD,CAAUc,IAAKG,EAAWD,IAAI,MAC9B,UAACX,EAAD,YACE,SAACC,EAAD,mBACCI,MAEH,SAACT,EAAD,WACE,SAACE,EAAD,CAAUe,QAdU,WAC5BV,GAASW,EAAAA,EAAAA,KAAiB,GAC3B,aAkBF,C,8ECvCM,IAAMC,EAAe,mDACfC,EAAkB,0C,uDCDxB,IACMC,EAAkB,SAAAV,GAAK,OAAIA,EAAMC,KAAKU,SAAf,C","sources":["components/Message/Message.styled.jsx","components/Message/Message.jsx","components/RegisterForm/RegisterForm.styled.jsx","components/Styled/Register.styled.jsx","components/motivation/Motivation.styled.jsx","components/motivation/Motivation.jsx","components/patterns.js","redux/auth/selectors.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { colors } from 'components/colors';\n\nexport const MessageStyled = styled.div`\n  color: ${colors.error};\n  position: absolute;\n  font-size: 14px;\n  line-height: 21px;\n`;\n","import { MessageStyled } from './Message.styled';\n\nconst Message = ({ children }) => {\n  return (\n    <MessageStyled>\n      <p>{children} *</p>\n    </MessageStyled>\n  );\n};\n\nexport default Message;\n","import styled from '@emotion/styled';\nimport { colors } from '../colors';\nimport { mediaSizes } from '../constants';\n\nexport const RegisterFormStyled = styled.div`\n  background-color: ${colors.registerBcg};\n  box-shadow: 0px 4px 48px rgba(0, 0, 0, 0.1);\n  border-radius: 30px;\n  padding: 32px 28px;\n  margin-bottom: 18px;\n  margin-inline: auto;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    padding: 44px 50px;\n    width: 500px;\n  }\n\n  & button {\n    cursor: pointer;\n    width: 100%;\n    font-size: 16px;\n    line-height: 18px;\n    background-color: ${colors.greenButton};\n    border-radius: 6px;\n    height: 45px;\n    border: none;\n    color: ${colors.textGreenBtn};\n    transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:hover,\n    &:focus {\n      color: ${colors.darkButton};\n    }\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      height: 59px;\n    }\n  }\n`;\n\nexport const Caption = styled.p`\n  font-size: 24px;\n  line-height: 28px;\n  font-weight: 600;\n  letter-spacing: -0.02em;\n  color: ${colors.textGreenBtn};\n  margin-bottom: 32px;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    font-size: 28px;\n    line-height: 30px;\n  }\n`;\n\nexport const FormFields = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  margin-bottom: 28px;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    margin-bottom: 50px;\n  }\n`;\n\nexport const InputWraper = styled.div`\n  width: 100%;\n  position: relative;\n\n  & svg {\n    width: 18px;\n    height: 18px;\n    stroke: ${colors.textGreenBtn};\n    opacity: 0.6;\n    position: absolute;\n    top: 13px;\n    left: 14px;\n\n    &.error {\n      stroke: ${colors.error};\n      opacity: 1;\n    }\n\n    &.success {\n      stroke: ${colors.success};\n      opacity: 1;\n    }\n\n    &.icon {\n      fill: ${colors.textGreenBtn};\n\n      &.error-icon {\n        fill: ${colors.error};\n        opacity: 1;\n      }\n\n      &.success-icon {\n        fill: ${colors.success};\n        opacity: 1;\n      }\n    }\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      width: 24px;\n      height: 24px;\n      top: 16px;\n      left: 18px;\n    }\n  }\n\n  & div {\n    position: absolute;\n    font-size: 12px;\n    line-height: 21px;\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      font-size: 14px;\n    }\n\n    &.error {\n      color: ${colors.error};\n    }\n\n    &.success-message {\n      color: ${colors.success};\n    }\n  }\n\n  & input {\n    border: 1px solid rgba(250, 250, 250, 0.2);\n    border-radius: 6px;\n    width: 100%;\n    height: 100%;\n    background-color: transparent;\n    padding: 12px 40px;\n    color: ${colors.textGreenBtn};\n    opacity: 0.8;\n\n    font-size: 16px;\n    font-weight: 400;\n    line-height: 21px;\n    letter-spacing: -0.02em;\n    transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:focus {\n      border: 1px solid ${colors.whiteColor};\n    }\n\n    &.error {\n      border: 1px solid ${colors.error};\n      opacity: 1;\n    }\n\n    &.success {\n      border: 1px solid ${colors.success};\n      opacity: 1;\n    }\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      font-size: 18px;\n      line-height: 27px;\n      padding: 16px 50px;\n    }\n\n    &::placeholder {\n      font-weight: 400;\n      color: ${colors.textGreenBtn};\n\n      opacity: 0.8;\n    }\n\n    &:focus::-webkit-input-placeholder {\n      color: ${colors.whiteColor};\n      opacity: 1;\n    }\n\n    &:hover,\n    placeholder {\n      stroke: ${colors.whiteColor};\n      fill: ${colors.whiteColor};\n      color: ${colors.whiteColor};\n      border-color: ${colors.whiteColor};\n      opacity: 1;\n    }\n  }\n\n  & .invalid,\n  .valid {\n    width: 18px;\n    height: 18px;\n    fill: ${colors.error};\n    opacity: 1;\n    position: absolute;\n    top: 13px;\n    left: 216px;\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      width: 24px;\n      height: 24px;\n      top: 16px;\n      left: 360px;\n    }\n  }\n\n  & .valid {\n    fill: ${colors.success};\n  }\n`;\n","import styled from '@emotion/styled';\nimport ordering from 'components/images/login-register/ordering.png';\nimport orderingTab from 'components/images/login-register/orderingTab.png';\nimport rectangleMob from 'components/images/login-register/rectangle_mob1x.png';\n// import rectangleTab from 'components/images/login-register/rectangle_tab1x.png';\nimport rectangleDesk from 'components/images/login-register/rectangle_desc1x.png';\nimport { mediaSizes } from '../constants';\nimport { colors } from '../colors';\n\nconst RegisterWrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background-color: ${colors.textGreenBtn};\n  background-image: url(${orderingTab}), url(${rectangleMob});\n  background-repeat: no-repeat, no-repeat;\n  background-position: center 84px, center 282px;\n  background-size: 285px auto, cover;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-bottom: 100px;\n  padding-top: 305px;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    background-position: center 98px, center 440px;\n    background-size: 409px auto, cover;\n\n    padding-top: 444px;\n  }\n\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    background-image: url(${ordering}), url(${rectangleDesk});\n    background-repeat: no-repeat, no-repeat;\n    background-position: 210px, center 400px;\n    background-size: 532px auto, cover;\n    padding-left: 760px;\n    height: 100vh;\n\n    display: flex;\n    flex-direction: column;\n    padding-block: 0;\n  }\n\n  & .wrapper {\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      margin-block: auto;\n    }\n  }\n\n  & a {\n    display: block;\n    color: ${colors.textGreenBtn};\n    font-size: 14px;\n    line-height: 21px;\n    text-decoration-line: underline;\n    text-align: center;\n    transition: all 200ms ease-in-out;\n\n    &:hover {\n      opacity: 0.7;\n    }\n  }\n`;\n\nexport default RegisterWrapper;\n","import styled from '@emotion/styled';\nimport { mediaSizes } from '../constants/media';\n\nimport { IoIosClose } from 'react-icons/io';\n\nexport const WrapperMotivation = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const ModalMotivation = styled.div`\n  z-index: 10000;\n  width: 100%;\n  height: 100%;\n  opacity: 1;\n  background: rgba(0, 0, 0, 0.3);\n  transition: transform 0.25s cubic-bezier(0.4, 0, 0.2, 1),\n    opacity 0.25s cubic-bezier(0.4, 0, 0.2, 1) 0.2s,\n    visibility 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n  position: fixed;\n  top: 0;\n  left: 0;\n  overflow-y: scroll;\n`;\nexport const ImgMotivation = styled.img`\n  border-radius: 30px;\n  width: 300px;\n  height: 300px;\n  position: relative;\n  -webkit-filter: invert(10%);\n  filter: invert(10%);\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    width: 400px;\n    height: 400px;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    width: 500px;\n    height: 500px;\n  }\n  /* &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.4);\n    border-radius: 30px;\n    opacity: 0.7;\n  } */\n`;\n\nexport const BlureFon = styled.img`\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 1;\n  width: 200px;\n  height: 180px;\n  left: 50%;\n  top: 70%;\n  /* background: rgba(217, 217, 217, 0.138); */\n  /* backdrop-filter: blur(27.9764px); */\n  transform: translate(-50%, -50%);\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    width: 268px;\n    height: 242px;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    width: 268px;\n    height: 242px;\n  }\n`;\n\nexport const BtnBlure = styled.button`\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  border: none;\n  background: #8baa36;\n  position: absolute;\n  left: 226px;\n  top: 398px;\n  z-index: 2;\n  cursor: pointer;\n  left: 50%;\n  top: 90%;\n  transform: translate(-50%, -50%);\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    width: 48px;\n    height: 48px;\n    top: 90%;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    width: 48px;\n    height: 48px;\n    top: 87%;\n  }\n`;\n\nexport const WrapperBlure = styled.div`\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  position: absolute;\n  background: rgba(0, 0, 0, 0.5);\n  border-radius: 30px;\n\n  /* width: 100px; */\n  /* height: 100px; */\n`;\n\nexport const CloseInp = styled(IoIosClose)`\n  width: 21px;\n  height: 29px;\n  fill: #fafafa;\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    width: 38px;\n    height: 45px;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    width: 38px;\n    height: 45px;\n  }\n`;\n\nexport const TextBlureFon = styled.p`\n  font-weight: 600;\n  font-size: 20px;\n  line-height: 24px;\n  /* or 107% */\n\n  letter-spacing: -0.02em;\n  color: #fafafa;\n  left: 140px;\n  top: 250px;\n  position: absolute;\n  width: 172px;\n  height: 72px;\n  z-index: 3;\n  left: 50%;\n  top: 63%;\n  transform: translate(-50%, -50%);\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    width: 220px;\n    height: 120px;\n    left: 50%;\n    top: 65%;\n\n    font-style: normal;\n    font-weight: 600;\n    font-size: 28px;\n    line-height: 30px;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    width: 220px;\n    height: 120px;\n    font-size: 28px;\n    line-height: 30px;\n    left: 50%;\n    top: 65%;\n  }\n`;\n\nexport const WowText = styled.span`\n  color: #8baa36;\n  margin-right: 8px;\n`;\n","import {\n  ImgMotivation,\n  WrapperMotivation,\n  ModalMotivation,\n  BlureFon,\n  WrapperBlure,\n  BtnBlure,\n  CloseInp,\n  TextBlureFon,\n  WowText,\n} from './Motivation.styled';\nimport FotoMotivation from '../images/using-foto/foto-for-using-desc.jpg';\nimport BlureFons from '../images/blurefon/blure fon.png';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeMotivation } from 'redux/auth/slice';\n\nexport const Motivation = () => {\n  const dispatch = useDispatch();\n  const motivation = useSelector(state => state.auth.motivation);\n  const handleCloseMotivation = () => {\n    dispatch(changeMotivation(false));\n  };\n  return (\n    <ModalMotivation>\n      <WrapperMotivation>\n        <ImgMotivation src={FotoMotivation} alt=\"\" />\n        <WrapperBlure>\n          <BlureFon src={BlureFons} alt=\"\" />\n          <TextBlureFon>\n            <WowText>Wow!</WowText>\n            {motivation}\n          </TextBlureFon>\n          <BtnBlure>\n            <CloseInp onClick={handleCloseMotivation} />\n          </BtnBlure>\n        </WrapperBlure>\n      </WrapperMotivation>\n    </ModalMotivation>\n  );\n};\n","export const emailPattern = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/;\nexport const passwordPattern = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{6,16}$/;\n","export const selectLogin = state => state.auth.isLoggedIn;\nexport const selectAuthError = state => state.auth.authError;\n"],"names":["MessageStyled","styled","colors","children","RegisterFormStyled","mediaSizes","Caption","FormFields","InputWraper","orderingTab","ordering","WrapperMotivation","ModalMotivation","ImgMotivation","BlureFon","BtnBlure","WrapperBlure","CloseInp","IoIosClose","TextBlureFon","WowText","Motivation","dispatch","useDispatch","motivation","useSelector","state","auth","src","FotoMotivation","alt","BlureFons","onClick","changeMotivation","emailPattern","passwordPattern","selectAuthError","authError"],"sourceRoot":""}