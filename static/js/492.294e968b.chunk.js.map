{"version":3,"file":"static/js/492.294e968b.chunk.js","mappings":"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","sources":["components/Diary/Diary.styled.jsx","components/DatePicker/DatePicker.styled.jsx","components/DatePicker/DatePicker.jsx","components/Styled/ButtonDiary.styled.jsx","components/DiaryForm/DiaryForm.styled.jsx","components/DiaryForm/DiaryForm.jsx","components/ModalAddProduct/ModalAddProduct.styled.jsx","components/ModalAddProduct/ModalAddProduct.jsx","components/Diary/Diary.jsx","components/Styled/DiaryPage.styled.jsx","pages/Diary.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { mediaSizes } from 'constants';\nimport { colors } from 'constants';\nimport { container, transition } from 'helpers';\n\nexport const DiaryStyled = styled.div`\n  ${container}\n  margin-top: 140px;\n  display: flex;\n  flex-shrink: 0;\n  flex-grow: 0;\n  flex-direction: column;\n\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    width: 60%;\n    padding: 0;\n  }\n\n  input:focus {\n    outline: none;\n  }\n\n  & .mobile-diary-wrap {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    @media screen and (min-width: ${mediaSizes.mobile}) {\n    }\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      align-items: flex-start;\n    }\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      align-items: flex-start;\n    }\n  }\n\n  & .Diary__input_name::placeholder {\n    font-family: 'Verdana';\n    font-weight: 700;\n    font-size: 14px;\n    line-height: 17px;\n    /* identical to box height */\n\n    letter-spacing: 0.04em;\n\n    color: #9b9faa;\n  }\n  & .Diary__input_grams::placeholder {\n    font-family: 'Verdana';\n    font-style: normal;\n    font-weight: 700;\n    font-size: 14px;\n    line-height: 17px;\n    /* identical to box height */\n\n    text-align: left;\n    letter-spacing: 0.04em;\n\n    color: #9b9faa;\n    @media screen and (min-width: ${mediaSizes.mobile}) {\n      text-align: left;\n    }\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      text-align: right;\n    }\n    @media screen and (min-width: ${mediaSizes.mobile}) {\n      text-align: right;\n    }\n  }\n  & .Diary__list-name {\n    font-size: 14px;\n    line-height: 17px;\n    letter-spacing: 0.04em;\n    font-weight: 400;\n    flex-basis: 100%;\n    margin-right: 8px;\n\n    color: #212121;\n    border-bottom: 1px solid #e0e0e0;\n    padding-bottom: 8px;\n    width: 130px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      flex-basis: auto;\n      width: 240px;\n      margin-right: 48px;\n      padding-bottom: 20px;\n    }\n  }\n  & .Diary__list-gram {\n    font-size: 14px;\n    line-height: 17px;\n    text-align: right;\n    letter-spacing: 0.04em;\n    font-weight: 400;\n    white-space: nowrap;\n    margin-right: 8px;\n\n    color: #212121;\n    border-bottom: 1px solid #e0e0e0;\n    padding-bottom: 8px;\n    width: 49px;\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      width: 106px;\n      margin-right: 32px;\n      padding-bottom: 20px;\n    }\n  }\n  & .Diary__list-kcal {\n    font-size: 14px;\n    line-height: 17px;\n    text-align: right;\n    letter-spacing: 0.04em;\n    font-weight: 400;\n    white-space: nowrap;\n\n    color: #212121;\n    border-bottom: 1px solid #e0e0e0;\n    padding-bottom: 8px;\n    width: 58px;\n    margin-right: 17px;\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      width: 106px;\n      margin-right: 32px;\n      padding-bottom: 20px;\n    }\n\n    & span {\n      font-size: 12px;\n    }\n  }\n\n  & .Diary__btn-delete {\n    background-color: transparent;\n    border: none;\n    width: 15px;\n    height: 15px;\n    color: #9b9faa;\n    margin-right: 20px;\n    cursor: pointer;\n    ${transition('color')}\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      margin-right: 40px;\n    }\n\n    &:hover {\n      animation: jelly 0.5s;\n      color: ${colors.color1};\n    }\n\n    @keyframes jelly {\n      25% {\n        transform: scale(0.9, 1.1);\n      }\n\n      50% {\n        transform: scale(1.1, 0.9);\n      }\n\n      75% {\n        transform: scale(0.95, 1.05);\n      }\n    }\n  }\n\n  & .Diarty__list {\n    display: flex;\n    position: relative;\n    /* gap: 10px; */\n  }\n\n  & .Diary__list-wrapper {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      gap: 16px;\n    }\n  }\n\n  & .Diarty__header-wrapper {\n    position: relative;\n    width: 100%;\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      width: auto;\n      align-items: flex-start;\n    }\n\n    &::after {\n      content: '';\n      position: absolute;\n      left: 0;\n      bottom: 0px;\n      pointer-events: none;\n      width: 100%;\n      height: 40px;\n      background-image: linear-gradient(\n        0deg,\n        #ffffff 18%,\n        rgba(255, 255, 255, 0) 100%\n      );\n    }\n  }\n  & .Diary__header-wraper-data {\n    display: flex;\n    align-items: center;\n    height: 20px;\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      margin-bottom: 60px;\n      height: 38px;\n    }\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      margin-bottom: 60px;\n      height: 38px;\n    }\n  }\n  & .Diary__data {\n    font-weight: 700;\n    font-size: 18px;\n    line-height: 22px;\n    display: flex;\n    align-items: center;\n    margin-right: 21px;\n    color: #212121;\n    @media screen and (min-width: ${mediaSizes.mobile}) {\n      font-size: 18px;\n      line-height: 22px;\n    }\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      font-size: 34px;\n      line-height: 41px;\n    }\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      font-size: 34px;\n      line-height: 41px;\n    }\n  }\n  & .Diary__icon-data {\n    width: 25px;\n    height: 25px;\n    @media screen and (min-width: ${mediaSizes.mobile}) {\n      width: 15px;\n      height: 15px;\n    }\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      width: 25px;\n      height: 25px;\n    }\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      width: 25px;\n      height: 25px;\n    }\n  }\n  & .Diary__btn-add {\n    width: 48px;\n    height: 48px;\n    background: #fc842d;\n    box-shadow: 0px 4px 10px rgba(252, 132, 45, 0.5);\n    border-radius: 50%;\n    border: none;\n    margin-left: 0px;\n    margin-top: 60px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n\n    &:hover {\n      animation: jelly 0.5s;\n    }\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      display: none;\n    }\n\n    @keyframes jelly {\n      25% {\n        transform: scale(0.9, 1.1);\n      }\n\n      50% {\n        transform: scale(1.1, 0.9);\n      }\n\n      75% {\n        transform: scale(0.95, 1.05);\n      }\n    }\n  }\n`;\n\nexport const DiaryStyledList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  max-height: 280px;\n  position: relative;\n  overflow-y: auto;\n  margin-top: 32px;\n  margin-right: -20px;\n  padding-right: 5px;\n\n  /* width */\n  ::-webkit-scrollbar {\n    width: 6px;\n    height: 0px;\n  }\n\n  /* Track */\n  ::-webkit-scrollbar-track {\n    box-shadow: inset 0 0 6px #f0f1f3;\n  }\n\n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n    background: #264061;\n  }\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    margin-top: 60px;\n  }\n\n  & > li:last-child {\n    margin-bottom: 14px;\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      margin-bottom: 6px;\n    }\n  }\n`;\n\nexport const EmptyProductsMessage = styled.p`\n  margin-top: 30px;\n  color: ${colors.color2};\n`;\n","import styled from '@emotion/styled';\nimport DatePicker from 'react-datepicker';\nimport { colors } from 'constants';\nimport { mediaSizes } from 'constants/media';\nimport { AiOutlineCalendar } from 'react-icons/ai';\n\nexport const CustomDatePicker = styled(DatePicker)`\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 22px;\n  color: #212121;\n  border: none;\n  width: 120px;\n  cursor: pointer;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    font-size: 34px;\n    line-height: 41px;\n    width: 225px;\n  }\n`;\n\nexport const DatePickerContainer = styled.div`\n  display: flex;\n  align-items: center;\n\n  .product-days {\n    position: relative;\n\n    &::before {\n      content: '';\n      width: 7px;\n      height: 7px;\n      display: inline-block;\n      position: absolute;\n      border-radius: 50%;\n      right: 0;\n      top: 0;\n      background-color: #3d7b06;\n    }\n  }\n  .react-datepicker__day--selected {\n    background-color: ${colors.color1};\n    border-radius: 50%;\n\n    &:hover {\n       background-color: #e67b2f;\n    }\n  }\n\n  .curent-day:not(.react-datepicker__day--selected) {\n    background-color: #ffbe90;\n    border-radius: 50%;\n\n    &:hover {\n       background-color:#faad77;\n    }\n  }\n\n  .react-datepicker__day:hover {\n    border-radius: 50%;\n  }\n\n  &:hover,\n  &:focus {\n    svg,\n    input {\n      outline: none;\n      fill: ${colors.color1};\n      color: ${colors.color1};\n    }\n  }\n`;\nexport const CalendarIcon = styled(AiOutlineCalendar)`\n  width: 20px;\n  height: 20px;\n  margin-left: 20px;\n  cursor: pointer;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    width: 25px;\n    height: 25px;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    width: 25px;\n    height: 25px;\n  }\n`;\n","import { useEffect, useRef } from 'react';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport {\n  CalendarIcon,\n  CustomDatePicker,\n  DatePickerContainer,\n} from './DatePicker.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setSelectedDate } from 'redux/user/slice';\nimport { selectSelectedDate, selectUser } from 'redux/user/selectors';\n\nconst DatePicker = () => {\n  const dispatch = useDispatch();\n  const selectedDate = useSelector(selectSelectedDate);\n  const user = useSelector(selectUser);\n  const isFirstLoad = useRef(false);\n\n  useEffect(() => {\n    if (!isFirstLoad.current) {\n      isFirstLoad.current = true;\n      return;\n    }\n\n    // dispatch(diaryDayInfo(selectedDate));\n    dispatch(setSelectedDate(selectedDate));\n  }, [dispatch, selectedDate]);\n\n  const dateProduct = () => {\n    return [\n      {\n        'curent-day': [new Date()],\n      },\n      {\n        'product-days': user.days\n          ? user.days\n              .filter(day => day.eatenProducts.length > 0)\n              .map(day => new Date(day.date))\n          : [],\n      },\n    ];\n  };\n\n  const changeDate = date => {\n    const formattedDate = date.toISOString().slice(0, 10);\n\n    dispatch(setSelectedDate(formattedDate));\n  };\n\n  return (\n    <DatePickerContainer>\n      <CustomDatePicker\n        id=\"date-picker\"\n        dateFormat=\"dd.MM.yyyy\"\n        selected={new Date(selectedDate)}\n        onChange={changeDate}\n        readonly\n        highlightDates={dateProduct()}\n      />\n      <label htmlFor=\"date-picker\">\n        <CalendarIcon color=\"#9B9FAA\" />\n      </label>\n    </DatePickerContainer>\n  );\n};\n\nexport default DatePicker;\n","import styled from '@emotion/styled';\nimport { mediaSizes } from 'constants';\nimport { transition } from 'helpers';\n\nexport const ButtonDiary = styled.button`\n  width: 48px;\n  height: 48px;\n  flex-grow: 0;\n  flex-shrink: 0;\n  position: relative;\n  top: -8px;\n  background: #fc842d;\n  box-shadow: 0px 4px 10px rgba(252, 132, 45, 0.5);\n  border-radius: 50%;\n  border: none;\n  margin-left: 0px;\n  margin-top: 0px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  ${transition('opacity')}\n\n  &[disabled] {\n    opacity: 0.5;\n  }\n\n  &:hover {\n    animation: jelly 0.5s;\n  }\n  /* @media screen and (min-width: ${mediaSizes.mobile}) {\n    margin-left: 0px;\n    margin-top: 60px;\n  } */\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    margin-top: 0px;\n    margin-left: 39px;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    flex-direction: row;\n    margin-top: 0px;\n    margin-left: 12px;\n  }\n\n  @keyframes jelly {\n    25% {\n      transform: scale(0.9, 1.1);\n    }\n\n    50% {\n      transform: scale(1.1, 0.9);\n    }\n\n    75% {\n      transform: scale(0.95, 1.05);\n    }\n  }\n`;\n","import styled from '@emotion/styled';\nimport { colors } from 'constants';\nimport { mediaSizes } from 'constants';\nimport { Form } from 'formik';\nimport { transition } from 'helpers';\n\nexport const FormikForm = styled(Form)`\n  position: relative;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    gap: 48px;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n  }\n\n  & input[name='search'] {\n    width: 280px;\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      width: 240px;\n    }\n\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n    }\n  }\n\n  & input[name='grams'] {\n    width: 280px;\n    text-align: left;\n\n    &::-webkit-outer-spin-button,\n    &::-webkit-inner-spin-button {\n      -webkit-appearance: none;\n      margin: 0;\n    }\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      width: 106px;\n      text-align: right;\n    }\n\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n    }\n\n    & + label {\n      text-align: right;\n    }\n  }\n\n  &.mobile {\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    & input {\n      width: 100%;\n\n      & + label {\n        text-align: left;\n      }\n    }\n\n    & button {\n      margin-top: 60px;\n    }\n  }\n`;\n\nexport const ProductsList = styled.ul`\n  list-style: none;\n  padding: 15px;\n  max-height: 300px;\n  width: 350px;\n  overflow-y: scroll;\n  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);\n  position: absolute;\n  z-index: 3;\n  top: 50px;\n  background-color: white;\n  // box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;\n\n  ::-webkit-scrollbar {\n    width: 6px;\n    height: 0px;\n  }\n\n  ::-webkit-scrollbar-track {\n    box-shadow: inset 0 0 6px #f0f1f3;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: #264061;\n  }\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    max-height: 400px;\n    width: 400px;\n  }\n\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    max-height: 350px;\n    width: 440px;\n  }\n\n  & li {\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 1.4;\n    color: ${colors.color2};\n\n    padding: 10px 0;\n    cursor: pointer;\n\n    &:not(:last-child) {\n      border-bottom: 0.5px solid ${colors.color3};\n      transition: ${transition};\n    }\n\n    &:hover {\n      color: ${colors.color4};\n    }\n  }\n`;\n","import { InputWraper } from 'components/Form/Input.styled';\nimport { ButtonDiary } from 'components/Styled/ButtonDiary.styled';\nimport { ErrorMessage, Field, Formik } from 'formik';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addProduct } from 'redux/user/operations';\nimport { fetchProductsList } from 'redux/user/operations';\nimport { AiOutlinePlus } from 'react-icons/ai';\nimport * as yup from 'yup';\nimport {\n  selectIsLoadingAddProduct,\n  selectIsLoadingProducts,\n  selectProducts,\n  selectSelectedDate,\n} from 'redux/user/selectors';\nimport { LoaderSmall } from 'components/Loader/Loader';\nimport { FormikForm, ProductsList } from './DiaryForm.styled';\nimport { Button } from 'components/Styled';\nimport { setProductModalOpened } from 'redux/ModalAddProductOpened/slice';\n\nexport const DiaryForm = ({ type }) => {\n  const dispatch = useDispatch();\n  const selectedDate = useSelector(selectSelectedDate);\n  const [productId, setProductId] = useState('');\n  const [searchValue, setSearchValue] = useState('');\n  const [weight, setWeight] = useState(0);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const isFetchingProducts = useSelector(selectIsLoadingProducts);\n  const products = useSelector(selectProducts);\n  const isLoadingAddProduct = useSelector(selectIsLoadingAddProduct);\n  const initialValues = { search: '', grams: '' };\n  const filteredProducts = products.filter(product =>\n    product.title.ua.toLowerCase().includes(searchValue.toLowerCase())\n  );\n  const addButtonDisabled =\n    filteredProducts.length === 0 || !searchValue || weight === 0;\n\n  const schema = yup.object().shape({\n    search: yup.string().min(1).max(30).required('Please enter product name'),\n    grams: yup\n      .number()\n      .min(1)\n      .max(3000)\n      .required('Required field')\n      .positive()\n      .integer(),\n  });\n\n  const handleSubmit = () => {\n    dispatch(\n      addProduct({\n        date: selectedDate,\n        productId: productId,\n        weight: weight,\n      })\n    );\n\n    setSearchValue('');\n    setWeight('');\n\n    dispatch(setProductModalOpened(false));\n  };\n\n  const handleSearchChange = value => {\n    setSearchValue(value);\n\n    dispatch(fetchProductsList(value));\n    setShowDropdown(true);\n\n    if (value.length === 0) {\n      setShowDropdown(false);\n    }\n  };\n\n  const handleOnChange = e => {\n    if (e.target.name === 'search') {\n      handleSearchChange(e.target.value);\n    }\n    if (e.target.name === 'grams') {\n      setWeight(e.target.value);\n    }\n  };\n\n  useEffect(() => {\n    const closeDropdown = e => {\n      if (!e.target.classList.contains('productlist')) {\n        setShowDropdown(false);\n      }\n    };\n\n    window.addEventListener('click', closeDropdown);\n\n    return () => window.removeEventListener('click', closeDropdown);\n  }, []);\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <FormikForm autoComplete=\"off\" onChange={handleOnChange} className={type}>\n        <InputWraper>\n          <Field\n            type=\"text\"\n            name=\"search\"\n            placeholder=\" \"\n            value={searchValue}\n          />\n          <label htmlFor=\"search\">Enter product name</label>\n          <ErrorMessage className=\"error\" component=\"div\" name=\"search\" />\n        </InputWraper>\n\n        <InputWraper>\n          <Field\n            type=\"number\"\n            name=\"grams\"\n            placeholder=\" \"\n            value={weight || ''}\n          />\n          <label htmlFor=\"grams\">Grams</label>\n          <ErrorMessage className=\"error\" component=\"div\" name=\"grams\" />\n        </InputWraper>\n\n        {type !== 'mobile' && (\n          <>\n            <ButtonDiary type=\"submit\" disabled={addButtonDisabled}>\n              <AiOutlinePlus color=\"white\" />\n            </ButtonDiary>\n            {isLoadingAddProduct && <LoaderSmall name=\"addProduct\" />}\n          </>\n        )}\n\n        {type === 'mobile' && (\n          <>\n            {isLoadingAddProduct && <LoaderSmall name=\"addProductMobile\" />}\n            <Button type=\"submit\" className=\"orange\">\n              Add\n            </Button>\n          </>\n        )}\n\n        {showDropdown && isFetchingProducts && (\n          <ProductsList className=\"productlist\">\n            <LoaderSmall />\n          </ProductsList>\n        )}\n\n        {showDropdown && !isFetchingProducts && filteredProducts.length > 1 && (\n          <ProductsList className=\"productlist\">\n            {filteredProducts.map(product => (\n              <li\n                onClick={() => {\n                  setSearchValue(product.title.ua);\n                  setProductId(product._id);\n                  setShowDropdown(false);\n                }}\n                key={product.title.ua}\n              >\n                {product.title.ua}\n              </li>\n            ))}\n          </ProductsList>\n        )}\n        {showDropdown &&\n          !isFetchingProducts &&\n          filteredProducts.length === 0 && (\n            <ProductsList className=\"productlist\">\n              Products not found\n            </ProductsList>\n          )}\n      </FormikForm>\n    </Formik>\n  );\n};\n","import styled from '@emotion/styled';\nimport { mediaSizes } from 'constants/media';\nimport { ishidden, transition } from 'helpers';\n\nconst headerHeight = '80px';\n\nexport const ModalStyled = styled.div`\n  position: fixed;\n  z-index: 3;\n  top: ${headerHeight};\n  left: 0;\n  width: 100%;\n  height: calc(100% - ${headerHeight});\n  opacity: 1;\n  ${transition('visible')};\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    height: 100%;\n    z-index: 5;\n    top: 0;\n    background-color: rgba(33, 33, 33, 0.12);\n  }\n\n  &.is-hidden {\n    ${ishidden};\n\n    & .inner {\n      transform: scale(0.7);\n      ${transition('transform')};\n    }\n  }\n\n  & .modal {\n    position: fixed;\n    top: ${headerHeight};\n    left: 50%;\n    width: 100%;\n    height: calc(100% - ${headerHeight});\n    transform: translateX(-50%) translateY(0px);\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      top: 50%;\n      width: 672px;\n      height: auto;\n      max-width: calc(100% - 24px * 2);\n      transform: translateX(-50%) translateY(-50%);\n    }\n  }\n\n  & .inner {\n    height: 100%;\n    transform: scale(1);\n    ${transition('transform')};\n    overflow: hidden;\n    padding: 80px 40px;\n    background-color: #ffffff;\n    overflow: hidden;\n    position: relative;\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      box-shadow: 0px 22px 40px rgba(0, 0, 0, 0.1);\n      padding: 64px 82px 82px 82px;\n    }\n  }\n\n  & .close {\n    background-color: #eff1f3;\n    width: 100%;\n    height: 40px;\n    border: none;\n    cursor: pointer;\n    padding: 0;\n    display: flex;\n    align-items: center;\n\n    position: absolute;\n    top: 0;\n    right: 0;\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      background-color: transparent;\n      border: none;\n\n      width: 20px;\n      height: 20px;\n      right: 24px;\n      top: 24px;\n      ${transition('transform')}\n\n      &:hover {\n        transform: scale(1.2);\n      }\n\n      &__icon {\n        fill: #000000;\n        width: 20px;\n        height: 20px;\n      }\n    }\n  }\n\n  & .return__icon {\n    margin-left: 20px;\n    width: 12px;\n    height: 7px;\n    cursor: pointer;\n    ${transition('transform')}\n\n    &:hover {\n      transform: scale(1.2);\n    }\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      position: absolute;\n    }\n  }\n`;\n","import { ModalStyled } from './ModalAddProduct.styled';\nimport { ReactComponent as BackArrow } from 'images/backarrow.svg';\nimport { createPortal } from 'react-dom';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectAddProductModalOpened } from 'redux/ModalAddProductOpened/selectors';\nimport { setProductModalOpened } from 'redux/ModalAddProductOpened/slice';\nimport { DiaryForm } from 'components/DiaryForm/DiaryForm';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst ModalAddProduct = () => {\n  const dispatch = useDispatch();\n  const modalOpened = useSelector(selectAddProductModalOpened);\n  const [isMobile, setIsMobile] = useState(false);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleCloseModal);\n\n    return () => {\n      window.removeEventListener('keydown', handleCloseModal);\n    };\n  });\n\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth < 768);\n    };\n\n    handleResize();\n    window.addEventListener('resize', handleResize);\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const closeModal = () => {\n    dispatch(setProductModalOpened(false));\n  };\n\n  const handleCloseModal = e => {\n    if (\n      (e.type === 'click' && e.target === e.currentTarget) ||\n      (e.type === 'keydown' && e.key === 'Escape')\n    ) {\n      closeModal();\n    }\n  };\n\n  return createPortal(\n    <ModalStyled\n      onClick={handleCloseModal}\n      className={!modalOpened || !isMobile ? 'is-hidden' : ''}\n    >\n      <div className=\"modal\">\n        <div className=\"inner\">\n          <button type=\"buttn\" className=\"close\" onClick={closeModal}>\n            <BackArrow className=\"return__icon\" />\n          </button>\n          <div>\n            <DiaryForm type=\"mobile\" />\n          </div>\n        </div>\n      </div>\n    </ModalStyled>,\n    modalRoot\n  );\n};\n\nexport default ModalAddProduct;\n","import {\n  DiaryStyled,\n  DiaryStyledList,\n  EmptyProductsMessage,\n} from './Diary.styled';\n\nimport { AiOutlineClose } from 'react-icons/ai';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport DatePicker from 'components/DatePicker/DatePicker';\nimport { deleteProduct } from 'redux/user/operations';\nimport { LoaderSmall } from 'components/Loader/Loader';\nimport { AiOutlinePlus } from 'react-icons/ai';\nimport { DiaryForm } from 'components/DiaryForm/DiaryForm';\nimport { setProductModalOpened } from 'redux/ModalAddProductOpened/slice';\nimport ModalAddProduct from 'components/ModalAddProduct/ModalAddProduct';\nimport {\n  selectDiaryError,\n  selectIsLoggedIn,\n  selectIsProductDeleting,\n  selectSelectedDate,\n  selectUser,\n} from 'redux/user/selectors';\n\nexport const DiaryMain = () => {\n  const dispatch = useDispatch();\n  const selectedDate = useSelector(selectSelectedDate);\n  const user = useSelector(selectUser);\n  const isProductDeleting = useSelector(selectIsProductDeleting);\n  const eatenProductsFiltered =\n    user.days?.filter(day => day.date === selectedDate) || [];\n  const eatenProducts = eatenProductsFiltered[0]?.eatenProducts || [];\n  const eatenProductsSorted = [...eatenProducts].reverse();\n  const [deletingProductId, setDeletingProductId] = useState(null);\n  const [isMobile, setIsMobile] = useState(false);\n  const isLoggedin = useSelector(selectIsLoggedIn);\n  const dayInfoError = useSelector(selectDiaryError);\n\n  const handleDeleteProduct = id => {\n    const dayId = user.days?.filter(day => day.date === selectedDate)[0]._id;\n    setDeletingProductId(id);\n    dispatch(deleteProduct([id, dayId]));\n  };\n\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth < 768);\n    };\n\n    handleResize();\n    window.addEventListener('resize', handleResize);\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const openAddProductModal = () => {\n    dispatch(setProductModalOpened(true));\n  };\n\n  return (\n    <DiaryStyled>\n      <div className=\"mobile-diary-wrap\">\n        <div className=\"Diary__header-wraper-data\">\n          <div className=\"Diary__data\">{isLoggedin && <DatePicker />}</div>\n        </div>\n\n        {!isMobile && !!user.userData.dailyRate && <DiaryForm />}\n\n        {!user.userData.dailyRate && (\n          <EmptyProductsMessage>\n            Please, count your daily rate first\n          </EmptyProductsMessage>\n        )}\n\n        {eatenProductsSorted.length > 0 ? (\n          <div className=\"Diarty__header-wrapper\">\n            <DiaryStyledList>\n              {eatenProductsSorted.map(product => (\n                <li key={product.id} className=\"Diary__list-wrapper\">\n                  <div className=\"Diarty__list\">\n                    <div className=\"Diary__list-name\" title={product.title}>\n                      {product.title}\n                    </div>\n                    <div className=\"Diary__list-gram\">\n                      {Math.ceil(product.weight)} g\n                    </div>\n                    <div className=\"Diary__list-kcal\">\n                      {Math.ceil(product.kcal)} <span>kcal</span>\n                    </div>\n                    <button\n                      className=\"Diary__btn-delete\"\n                      type=\"button\"\n                      onClick={() => handleDeleteProduct(product.id)}\n                    >\n                      <AiOutlineClose />\n                    </button>\n                    {isProductDeleting && deletingProductId === product.id && (\n                      <LoaderSmall name=\"deleteProduct\" />\n                    )}\n                  </div>\n                </li>\n              ))}\n            </DiaryStyledList>\n          </div>\n        ) : (\n          !!user.userData.dailyRate && (\n            <EmptyProductsMessage>\n              {dayInfoError || 'You did not add any products!'}\n            </EmptyProductsMessage>\n          )\n        )}\n        <button className=\"Diary__btn-add\" onClick={openAddProductModal}>\n          <AiOutlinePlus color=\"white\" />\n        </button>\n        <ModalAddProduct />\n      </div>\n    </DiaryStyled>\n  );\n};\n","import styled from '@emotion/styled';\nimport { mediaSizes } from 'constants';\nimport { container } from 'helpers';\nimport imagedesk from 'images/Sidebarimg/imgdesk2x.png';\n\nexport const DiaryStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  row-gap: 55px;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n  }\n\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    ${container}\n    flex-direction: row;\n    align-items: flex-start;\n  }\n\n  &::before {\n    content: '';\n    display: none;\n\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      display: block;\n      position: fixed;\n      z-index: -1;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      width: 40%;\n      height: 100vh;\n      background: url(${imagedesk}) top 20px right #f0f1f3 no-repeat;\n      background-size: auto 900px;\n    }\n  }\n`;\n","import Sidebar from 'components/Sidebar/Sidebar';\nimport { DiaryMain } from 'components/Diary/Diary';\nimport { DiaryStyled } from 'components/Styled/DiaryPage.styled';\n\nconst Diary = () => {\n  return (\n    <DiaryStyled>\n      <DiaryMain />\n      <Sidebar />\n    </DiaryStyled>\n  );\n};\n\nexport default Diary;\n"],"names":["DiaryStyled","styled","container","mediaSizes","transition","colors","DiaryStyledList","EmptyProductsMessage","CustomDatePicker","DatePicker","DatePickerContainer","CalendarIcon","AiOutlineCalendar","dispatch","useDispatch","selectedDate","useSelector","selectSelectedDate","user","selectUser","isFirstLoad","useRef","useEffect","current","setSelectedDate","id","dateFormat","selected","Date","onChange","date","formattedDate","toISOString","slice","readonly","highlightDates","days","filter","day","eatenProducts","length","map","htmlFor","color","ButtonDiary","FormikForm","Form","ProductsList","DiaryForm","type","useState","productId","setProductId","searchValue","setSearchValue","weight","setWeight","showDropdown","setShowDropdown","isFetchingProducts","selectIsLoadingProducts","products","selectProducts","isLoadingAddProduct","selectIsLoadingAddProduct","filteredProducts","product","title","ua","toLowerCase","includes","addButtonDisabled","schema","yup","shape","search","min","max","required","grams","positive","integer","closeDropdown","e","target","classList","contains","window","addEventListener","removeEventListener","initialValues","validationSchema","onSubmit","addProduct","setProductModalOpened","autoComplete","value","name","fetchProductsList","className","placeholder","component","disabled","Loader","onClick","_id","headerHeight","ModalStyled","ishidden","modalRoot","document","querySelector","modalOpened","selectAddProductModalOpened","isMobile","setIsMobile","handleCloseModal","handleResize","innerWidth","closeModal","currentTarget","key","createPortal","DiaryMain","isProductDeleting","selectIsProductDeleting","eatenProductsSorted","reverse","deletingProductId","setDeletingProductId","isLoggedin","selectIsLoggedIn","dayInfoError","selectDiaryError","userData","dailyRate","Math","ceil","kcal","dayId","deleteProduct","handleDeleteProduct","imagedesk","Sidebar"],"sourceRoot":""}