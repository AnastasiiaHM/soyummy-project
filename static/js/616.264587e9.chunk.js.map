{"version":3,"file":"static/js/616.264587e9.chunk.js","mappings":"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","sources":["components/CategoriesTab/CategoriesTab.styled.jsx","components/CategoriesTab/CategoriesTab.jsx","components/Paginator/Paginator.styled.jsx","components/Paginator/Paginator.jsx","components/RecipesGallery/RecipeCard/RecipeCardStyled.jsx","components/RecipesGallery/RecipeCard/RecipeCard.jsx","components/RecipesGallery/RecipesGalleryStyled.jsx","components/Styled/Shared.styled.jsx","components/RecipesGallery/RecipesGallery.jsx","../node_modules/react-content-loader/src/shared/uid.ts","../node_modules/react-content-loader/src/web/Svg.tsx","../node_modules/react-content-loader/src/web/ContentLoader.tsx","../node_modules/react-content-loader/src/web/presets/FacebookStyle.tsx","components/RecipesGallery/GallerySkeleton.jsx","components/CategoriesTab/CategoriesConteiner.styled.jsx","pages/Categories.jsx"],"sourcesContent":["import Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\nimport { styled } from '@mui/system';\n\nexport const StyledTab = styled(Tab)((props) => ({\n  fontWeight: 400,\n  fontSize: '14px',\n  lineHeight: '22px',\n  color: props.theme.placeholderText,\n  '&:hover': {\n    color: props.theme.constantGreenColor,\n    opacity: 1,\n  },\n  '&.Mui-selected': {\n    color: props.theme.constantGreenColor,\n  },\n}));\n\nexport const StyledBox = styled(Box)((props) => ({\n  backgroundColor: 'background.inherit',\n  paddingTop: '100px',\n  borderBottom: `1px solid ${props.theme.placeholderText}`,\n  '& .MuiTabs-indicator': {\n    backgroundColor: props.theme.constantGreenColor,\n  },\n  '& .MuiButtonBase-root': {\n    padding: '10px 0 20px',\n    marginRight: '20px',\n  },\n  '& .MuiTabScrollButton-root': {\n    margin: 0,\n  },\n}));\n","import { useState } from 'react';\nimport Tabs from '@mui/material/Tabs';\nimport { StyledTab, StyledBox } from './CategoriesTab.styled';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/recipes/slice';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nexport default function CategoriesTab(props) {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { category } = useParams();\n  const { categoriesList } = props;\n  const index = categoriesList.findIndex(recipe => recipe.name === category);\n  const [value, setValue] = useState(index >= 0 ? index : 0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const onClickCategory = e => {\n    dispatch(setFilter(e));\n    navigate(`/categories/${e}`);\n  };\n\n  return (\n    <StyledBox>\n      <Tabs\n        value={value}\n        onChange={handleChange}\n        variant=\"scrollable\"\n        scrollButtons\n        allowScrollButtonsMobile\n        aria-label=\"scrolltabs\"\n      >\n        {categoriesList.map(category => (\n          <StyledTab\n            key={category._id}\n            label={category.name}\n            onClick={() => onClickCategory(category.name)}\n          />\n        ))}\n      </Tabs>\n    </StyledBox>\n  );\n}\n","import styled from \"@emotion/styled\";\nimport { Pagination } from \"@mui/material\";\nimport { mediaSizes } from \"components/constants\";\n\nexport const StyledPagination = styled(Pagination)`\n  background: ${props => props.theme.recipesBackgroundCard};\n  box-shadow: ${props => props.theme.isDark ? 'none' : '0px 4px 4px rgba(135, 135, 135, 0.2)'};\n  border-radius: 26px;\n  padding: 5px 10px;\n  width: fit-content;\n\n  .MuiPaginationItem-ellipsis,\n  .MuiButtonBase-root {\n    color: ${props => props.theme.textPrimaryDark}!important;\n  }\n\n  .Mui-selected {\n    background-color: ${props => props.theme.constantGreenColor}!important;\n  }\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    padding: 10px 15px;\n  }\n`;\n\nexport const ContainerPagination = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;","import { ContainerPagination, StyledPagination } from './Paginator.styled';\n\nexport const Paginator = ({ totalPages, page, pageChange }) => {\n  const uppPageHandler = newPage => {\n    pageChange(newPage);\n\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n  return totalPages > 1 ? (\n    <ContainerPagination>\n      <StyledPagination\n        count={totalPages}\n        page={page}\n        onChange={(_, newPage) => uppPageHandler(newPage)}\n      />\n    </ContainerPagination>\n  ) : (\n    <></>\n  );\n};\n\nexport default Paginator;\n","import styled from '@emotion/styled';\nimport { mediaSizes } from '../../constants/media';\nimport { NavLink } from 'react-router-dom';\n\nexport const RecipeCardStyled = styled.li`\n  position: relative;\n  border-radius: 8px;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  max-width: 343px;\n  margin: 0;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    max-width: 336px;\n  }\n\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    max-width: 300px;\n  }\n\n  .image {\n    /* object-fit: cover; */\n    box-sizing: border-box;\n    -webkit-transform: scale(1);\n    transform: scale(1);\n    -webkit-transition: 0.5s ease-in-out;\n    transition: 0.3s ease-in-out;\n    &:hover {\n      cursor: pointer;\n      -webkit-transform: scale(1.2);\n      transform: scale(1.2);\n    }\n  }\n  /* 11 */\n  .name {\n    position: absolute;\n    bottom: 26px;\n    left: 18px;\n    background: ${props => props.theme.textBackground};\n    border-radius: 8px;\n    font-style: normal;\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 20px;\n    letter-spacing: -0.24px;\n    color: ${props => props.theme.textPrimaryDark};\n    padding: 16px 16px;\n    width: 268px;\n\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      bottom: 24px;\n      left: 16px;\n    }\n  }\n`;\nexport const StyledLink = styled(NavLink)`\n  display: flex;\n  width: 100%;\n  gap: 12px;\n`;\n","import React from 'react';\nimport { RecipeCardStyled, StyledLink } from './RecipeCardStyled';\n\nexport const RecipeCard = ({ recipe, location }) => {\n  const uppPageHandler = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n  return (\n    <RecipeCardStyled onClick={uppPageHandler}>\n      <StyledLink to={`/recipe/${recipe._id}`} state={{ from: location }}>\n        <img className=\"image\" src={recipe.preview} alt=\"dish-card\" />\n        <p className=\"name\">{recipe.title}</p>\n      </StyledLink>\n    </RecipeCardStyled>\n  );\n};\n","import styled from '@emotion/styled';\nimport { mediaSizes } from '../constants/media';\n\nexport const RecipesGalleryStyled = styled.ul`\n  display: flex;\n  gap: 28px;\n  justify-items: center;\n  justify-content: center;\n  padding-top: 32px;\n  padding-bottom: 50px;\n  flex-wrap: wrap;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    gap: 32px;\n    padding-top: 50px;\n    padding-bottom: 100px;\n  }\n\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    grid-column-gap: 14px;\n    grid-row-gap: 100px;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { mediaSizes } from 'components/constants';\n\nexport const Title = styled.h2`\n  font-weight: 600;\n  font-size: 28px;\n  line-height: 1;\n  color: ${props => props.theme.titleCategories};\n  padding-bottom: 50px;\n  margin-top: 50px;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    font-size: 32px;\n    padding-bottom: 72px;\n    margin-top: 72px;\n  }\n\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    font-size: 44px;\n    margin-top: 100px;\n    padding-bottom: 100px;\n  }\n`;\n\nexport const ButtonBase = styled.button`\n  display: block;\n  margin: 0 auto;\n  width: 161px;\n  height: 52px;\n  font-style: normal;\n  font-weight: 400;\n  background: transparent;\n  font-size: 16px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n  color: ${props => props.theme.textPrimaryDark};\n  border: 1px solid ${props => props.theme.constantGreenColor};\n  border-radius: 24px 44px;\n  transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  border-radius: 24px 44px;\n\n  &:hover,\n  &:focus {\n    background: ${props => props.theme.constantGreenColor};\n    color: ${props => props.theme.constWhiteColor};\n  }\n  \n  @media (min-width: 768px) {\n    width: 184px;\n    height: 57px;\n  }\n`;\n","import React from 'react';\nimport { RecipeCard } from './RecipeCard/RecipeCard';\nimport { RecipesGalleryStyled } from './RecipesGalleryStyled';\n\nconst RecipesGallery = ({ recipes }) => {\n  return (\n    <>\n      <RecipesGalleryStyled>\n        {recipes?.map(recipe => (\n          <RecipeCard key={recipe._id} recipe={recipe} />\n        ))}\n      </RecipesGalleryStyled>\n    </>\n  );\n};\n\nexport default RecipesGallery;\n","export default (): string =>\n  Math.random()\n    .toString(36)\n    .substring(6)\n","import * as React from 'react'\n\nimport uid from '../shared/uid'\nimport { IContentLoaderProps } from './'\n\nconst SVG: React.FC<IContentLoaderProps> = ({\n  animate = true,\n  animateBegin,\n  backgroundColor = '#f5f6f7',\n  backgroundOpacity = 1,\n  baseUrl = '',\n  children,\n  foregroundColor = '#eee',\n  foregroundOpacity = 1,\n  gradientRatio = 2,\n  gradientDirection = 'left-right',\n  uniqueKey,\n  interval = 0.25,\n  rtl = false,\n  speed = 1.2,\n  style = {},\n  title = 'Loading...',\n  beforeMask = null,\n  ...props\n}) => {\n  const fixedId = uniqueKey || uid()\n  const idClip = `${fixedId}-diff`\n  const idGradient = `${fixedId}-animated-diff`\n  const idAria = `${fixedId}-aria`\n\n  const rtlStyle = rtl ? { transform: 'scaleX(-1)' } : null\n  const keyTimes = `0; ${interval}; 1`\n  const dur = `${speed}s`\n  const gradientTransform =\n    gradientDirection === 'top-bottom' ? 'rotate(90)' : undefined\n\n  return (\n    <svg\n      aria-labelledby={idAria}\n      role=\"img\"\n      style={{ ...style, ...rtlStyle }}\n      {...props}\n    >\n      {title ? <title id={idAria}>{title}</title> : null}\n      {beforeMask && React.isValidElement(beforeMask) ? beforeMask : null}\n      <rect\n        role=\"presentation\"\n        x=\"0\"\n        y=\"0\"\n        width=\"100%\"\n        height=\"100%\"\n        clipPath={`url(${baseUrl}#${idClip})`}\n        style={{ fill: `url(${baseUrl}#${idGradient})` }}\n      />\n\n      <defs>\n        <clipPath id={idClip}>{children}</clipPath>\n\n        <linearGradient id={idGradient} gradientTransform={gradientTransform}>\n          <stop\n            offset=\"0%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`${-gradientRatio}; ${-gradientRatio}; 1`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n                begin={animateBegin}\n              />\n            )}\n          </stop>\n\n          <stop\n            offset=\"50%\"\n            stopColor={foregroundColor}\n            stopOpacity={foregroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`${-gradientRatio / 2}; ${-gradientRatio / 2}; ${1 +\n                  gradientRatio / 2}`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n                begin={animateBegin}\n              />\n            )}\n          </stop>\n\n          <stop\n            offset=\"100%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`0; 0; ${1 + gradientRatio}`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n                begin={animateBegin}\n              />\n            )}\n          </stop>\n        </linearGradient>\n      </defs>\n    </svg>\n  )\n}\n\nexport default SVG\n","import * as React from 'react'\n\nimport { Facebook, IContentLoaderProps } from '.'\nimport Svg from './Svg'\n\nconst ContentLoader: React.FC<IContentLoaderProps> = props =>\n  props.children ? <Svg {...props} /> : <Facebook {...props} />\n\nexport default ContentLoader\n","import * as React from 'react'\n\nimport { IContentLoaderProps } from '..'\nimport ContentLoader from '../ContentLoader'\n\nconst ReactContentLoaderFacebook: React.FC<IContentLoaderProps> = props => (\n  <ContentLoader viewBox=\"0 0 476 124\" {...props}>\n    <rect x=\"48\" y=\"8\" width=\"88\" height=\"6\" rx=\"3\" />\n    <rect x=\"48\" y=\"26\" width=\"52\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"56\" width=\"410\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"72\" width=\"380\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"88\" width=\"178\" height=\"6\" rx=\"3\" />\n    <circle cx=\"20\" cy=\"20\" r=\"20\" />\n  </ContentLoader>\n)\n\nexport default ReactContentLoaderFacebook\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst Skeleton = props => (\n  <ContentLoader\n    width={1440}\n    height={996}\n    viewBox=\"0 0 1240 996\"\n    backgroundColor=\"#f3f3f3\"\n    foregroundColor=\"#ecebeb\"\n    {...props}\n  >\n    <rect x=\"0\" y=\"50\" rx=\"10\" ry=\"10\" width=\"300\" height=\"300\" />\n    <rect x=\"314\" y=\"50\" rx=\"10\" ry=\"10\" width=\"300\" height=\"300\" />\n    <rect x=\"628\" y=\"50\" rx=\"10\" ry=\"10\" width=\"300\" height=\"300\" />\n    <rect x=\"942\" y=\"50\" rx=\"10\" ry=\"10\" width=\"300\" height=\"300\" />\n    <rect x=\"0\" y=\"450\" rx=\"10\" ry=\"10\" width=\"300\" height=\"300\" />\n    <rect x=\"314\" y=\"450\" rx=\"10\" ry=\"10\" width=\"300\" height=\"300\" />\n    <rect x=\"628\" y=\"450\" rx=\"10\" ry=\"10\" width=\"300\" height=\"300\" />\n    <rect x=\"942\" y=\"450\" rx=\"10\" ry=\"10\" width=\"300\" height=\"300\" />\n    <circle cx=\"580\" cy=\"800\" r=\"12\" />\n    <circle cx=\"620\" cy=\"800\" r=\"12\" />\n    <circle cx=\"660\" cy=\"800\" r=\"12\" />\n  </ContentLoader>\n);\n\nexport default Skeleton;\n","import styled from '@emotion/styled';\n\nexport const CategoriesConteiner = styled.div`\n  width: 375px;\n  max-width: 100%;\n\n  padding-bottom: 100px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  margin-left: auto;\n  margin-right: auto;\n\n  @media (min-width: 768px) and (max-width: 1439px) {\n    width: 768px;\n\n    padding-bottom: 200px;\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n\n  @media (min-width: 1440px) {\n    width: 1440px;\n\n    padding-top: 66px;\n    padding-bottom: 195px;\n    padding-left: 80px;\n    padding-right: 100px;\n  }\n`;\n","import CategoriesTab from 'components/CategoriesTab/CategoriesTab';\nimport RecipesGallery from 'components/RecipesGallery/RecipesGallery';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  fetchRecipesByCategory,\n  fetchCategory,\n} from 'redux/recipes/operations';\nimport Skeleton from '../components/RecipesGallery/GallerySkeleton';\nimport { CategoriesConteiner } from '../components/CategoriesTab/CategoriesConteiner.styled';\nimport Paginator from 'components/Paginator/Paginator';\nimport { useParams } from 'react-router-dom';\nimport { Title } from 'components/Styled/Shared.styled';\n\nconst Categories = () => {\n  const dispatch = useDispatch();\n  const params = useParams();\n  let query = params.category;\n  const { category, recipes, loading, totalPages, currentPage, itemsPerPage } =\n    useSelector(state => state.categories);\n\n  useEffect(() => {\n    dispatch(fetchCategory());\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(fetchRecipesByCategory({ query: query || 'Beef', page: 1 }));\n  }, [dispatch, query]);\n\n  const handlePageChange = page => {\n    dispatch(fetchRecipesByCategory({ query: query, page }));\n  };\n\n  return (\n    <section>\n      <CategoriesConteiner>\n        <Title>\n          Categories\n        </Title>\n\n        <CategoriesTab categoriesList={category} />\n\n        {loading ? <Skeleton /> : <RecipesGallery recipes={recipes} />}\n        {totalPages <= 1 || (\n          <Paginator\n            limit={itemsPerPage}\n            totalPages={totalPages}\n            page={currentPage}\n            pageChange={handlePageChange}\n          />\n        )}\n      </CategoriesConteiner>\n    </section>\n  );\n};\n\nexport default Categories;\n"],"names":["StyledTab","styled","Tab","props","fontWeight","fontSize","lineHeight","color","theme","placeholderText","constantGreenColor","opacity","StyledBox","Box","backgroundColor","paddingTop","borderBottom","padding","marginRight","margin","CategoriesTab","dispatch","useDispatch","navigate","useNavigate","category","useParams","categoriesList","index","findIndex","recipe","name","useState","value","setValue","Tabs","onChange","event","newValue","variant","scrollButtons","allowScrollButtonsMobile","map","label","onClick","e","setFilter","_id","StyledPagination","Pagination","recipesBackgroundCard","isDark","textPrimaryDark","mediaSizes","ContainerPagination","totalPages","page","pageChange","count","_","newPage","window","scrollTo","top","behavior","uppPageHandler","RecipeCardStyled","textBackground","StyledLink","NavLink","RecipeCard","location","to","state","from","className","src","preview","alt","title","RecipesGalleryStyled","Title","titleCategories","ButtonBase","constWhiteColor","recipes","SVG","_a","animate","animateBegin","_c","_d","backgroundOpacity","_e","baseUrl","children","_f","foregroundColor","_g","foregroundOpacity","_h","gradientRatio","_j","gradientDirection","uniqueKey","_k","interval","_l","rtl","_m","speed","_o","style","_p","_q","beforeMask","fixedId","Math","random","toString","substring","idClip","idGradient","idAria","rtlStyle","transform","keyTimes","dur","gradientTransform","undefined","React.createElement","role","id","React.isValidElement","x","y","width","height","clipPath","fill","offset","stopColor","stopOpacity","attributeName","values","repeatCount","begin","ContentLoader","Svg","__assign","Facebook","ReactContentLoaderFacebook","viewBox","rx","cx","cy","r","ry","CategoriesConteiner","query","useSelector","categories","loading","currentPage","itemsPerPage","useEffect","fetchCategory","fetchRecipesByCategory","Paginator","limit"],"sourceRoot":""}