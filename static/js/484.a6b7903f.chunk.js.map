{"version":3,"file":"static/js/484.a6b7903f.chunk.js","mappings":"oOAuDA,UAjDkB,WAChB,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GACEC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,UAAV,IADbC,EAAN,EAAMA,QAASC,EAAf,EAAeA,WAAYC,EAA3B,EAA2BA,YAAaC,EAAxC,EAAwCA,QAASC,EAAjD,EAAiDA,MAAOC,EAAxD,EAAwDA,aAExD,GAAgDC,EAAAA,EAAAA,WAAS,GAAzD,eAAOC,EAAP,KAAyBC,EAAzB,KAcA,IAZAC,EAAAA,EAAAA,YAAU,WACRd,GAASe,EAAAA,EAAAA,GAAgB,GAC1B,GAAE,CAACf,KAEJc,EAAAA,EAAAA,YAAU,WACJF,GACFZ,GAASe,EAAAA,EAAAA,GAAgBR,IAG3BM,GAAoB,EACrB,GAAE,CAACN,EAAaK,EAAkBZ,IAE/BS,EACF,OACE,UAAC,KAAD,mDAA+CA,EAAMO,WAIzD,IAIMC,EAAgB,mCAAG,WAAMC,GAAN,iFACjBlB,GAASmB,EAAAA,EAAAA,GAAgBD,IADR,OAEvBL,GAAoB,GAFG,2CAAH,sDAKtB,OACE,SAAC,KAAD,WACE,SAAC,IAAD,CACEO,KAAMf,EACNgB,SAAS,aACTf,WAAYA,EACZgB,KAAMf,EACNC,QAASA,EACTE,aAAcA,EACda,WAlBmB,SAAAD,GACvBtB,GAASe,EAAAA,EAAAA,GAAgBO,GAC1B,EAiBKE,WAAYP,KAInB,C","sources":["pages/MyRecipes/MyRecipes.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Message, RecipesContainer } from '../Favorite/Favorite.styled';\nimport RecipesList from 'components/Favorite/FavoriteList';\nimport { deleteOwnRecipe, fetchOwnRecipes } from 'redux/my-recipes/operations';\n\nconst MyRecipes = () => {\n  const dispatch = useDispatch();\n  let { recipes, totalPages, currentPage, loading, error, itemsPerPage } =\n    useSelector(state => state.ownRecipes);\n  const [deletePageChange, setDeletePageChange] = useState(false);\n\n  useEffect(() => {\n    dispatch(fetchOwnRecipes(1));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (deletePageChange) {\n      dispatch(fetchOwnRecipes(currentPage));\n    }\n\n    setDeletePageChange(false);\n  }, [currentPage, deletePageChange, dispatch]);\n\n  if (error) {\n    return (\n      <Message>Error while retrieving your recipes: {error.message}</Message>\n    );\n  }\n\n  const handlePageChange = page => {\n    dispatch(fetchOwnRecipes(page));\n  };\n\n  const handleCardDelete = async recipeId => {\n    await dispatch(deleteOwnRecipe(recipeId));\n    setDeletePageChange(true);\n  };\n\n  return (\n    <RecipesContainer>\n      <RecipesList\n        list={recipes}\n        listName=\"My recipes\"\n        totalPages={totalPages}\n        page={currentPage}\n        loading={loading}\n        itemsPerPage={itemsPerPage}\n        pageChange={handlePageChange}\n        deleteCard={handleCardDelete}\n      />\n    </RecipesContainer>\n  );\n};\n\nexport default MyRecipes;\n"],"names":["dispatch","useDispatch","useSelector","state","ownRecipes","recipes","totalPages","currentPage","loading","error","itemsPerPage","useState","deletePageChange","setDeletePageChange","useEffect","fetchOwnRecipes","message","handleCardDelete","recipeId","deleteOwnRecipe","list","listName","page","pageChange","deleteCard"],"sourceRoot":""}