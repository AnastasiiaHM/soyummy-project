{"version":3,"file":"static/js/760.281e0e63.chunk.js","mappings":"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","sources":["components/Recipes/Recipes.styled.jsx","redux/id-recipes/selectors.js","redux/favorite/selectors.js","components/Recipes/RecipesHero.jsx","components/Recipes/IngredientList.jsx","components/Recipes/RecipesIngred.jsx","components/Recipes/RecipesPreparation.jsx","components/Background/Background.jsx","pages/Recipes.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { mediaSizes } from 'components/constants';\nimport { colors } from '../colors';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n\nexport const RecipeWrapper = styled.div`\n    width: 343px;\n    margin: 0 auto;\n\n    @media (min-width: ${mediaSizes.tablet}) and (max-width: ${mediaSizes.desktop}) {\n    width: 704px;\n    margin: 0 auto;\n    }\n\n    @media (min-width: ${mediaSizes.desktop}) {\n    width: 1240px;\n    margin: 0 auto;\n    }\n`;\n\nexport const RecipeTitle = styled.h2`\n    font-family: 'Poppins', sans-serif;\n    font-style: normal;\n    font-weight: 600;\n    font-size: 24px;\n    line-height: 24px;\n    text-align: center;\n    letter-spacing: -0.02em;\n    margin-top: 80px;\n\n\n    color: ${colors.greenButton};\n\n    @media (min-width: ${mediaSizes.tablet}) {\n        font-size: 44px;\n        line-height: 44px;\n        margin-top: 100px;\n\n    }\n`;\n\nexport const RecipeText = styled.p`\n    font-family: 'Poppins', sans-serif;\n    font-style: normal;\n    font-weight: 400;\n    font-size: 12px;\n    line-height: 16px;\n\n    text-align: center;\n    letter-spacing: -0.02em;\n\n    color: ${colors.blackFont};\n    \n    width: 299px;\n    height: 64px;\n    margin: 0 auto;\n    margin-top: 18px;\n\n    @media (min-width: ${mediaSizes.tablet}) {\n        font-size: 18px;\n        line-height: 24px;\n\n        width: 656px;\n        height: 72px;\n        margin-top: 30px;\n    }\n`;\n\nexport const RecipeTiming = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-top: 48px;\n    margin-bottom: 82px;\n    gap: 10px;\n    color: ${colors.blackFont};\n\n    @media (min-width: ${mediaSizes.tablet}) and (max-width: ${mediaSizes.desktop}) {\n        margin-bottom: 55px;\n    }\n\n    @media (min-width: ${mediaSizes.desktop}) {\n        \n        margin-bottom: 25px;\n    }\n`;\n\nexport const RecipeIngContainer = styled.div`\n    width: 343px;\n    margin: 0 auto;\n    margin-top: 32px;\n    margin-bottom: 100px;\n\n    @media (min-width: ${mediaSizes.tablet}) {\n        width: 704px;\n        margin: 0 auto;\n        margin-bottom: 200px;\n    }\n\n    @media (min-width: ${mediaSizes.desktop}) {\n        width: 1240px;\n        margin-top: 50px;\n    }\n`\n\nexport const RecipeIngTable = styled.div`\n    display: flex;\n    left: 0px;\n    right: 0px;\n    top: 0px;\n    height: 32px;\n    background: ${colors.greenButton};\n    border-radius: 8px;\n\n    font-family: 'Poppins', sans-serif;\n    font-style: normal;\n    font-weight: 600;\n    font-size: 10px;\n    line-height: 15px;\n    align-items: center;\n    letter-spacing: 0.03em;\n    color: ${colors.textGreenBtn};\n    margin-bottom: 24px;\n\n    @media (min-width: ${mediaSizes.tablet}) {\n        height: 60px;\n        font-size: 18px;\n        line-height: 27px;\n        margin-bottom: 32px\n    }\n\n    @media (min-width: ${mediaSizes.desktop}) {\n        height: 60px;\n        margin-bottom: 50px;\n        font-size: 18px;\n        line-height: 27px;\n    }\n`\n\nexport const IngTable = styled.div`\n    display: flex;\n    margin-left: 122px;\n\n    @media (min-width: ${mediaSizes.tablet}) {\n        margin-left: 312px;\n    }\n\n    @media (min-width: ${mediaSizes.desktop}) {\n        margin-left: 761px;\n    }\n`\n\nexport const IngText = styled.p`\n    margin-right: 18px;\n\n    @media (min-width: ${mediaSizes.tablet}) {\n        margin-right: 38px;\n    }\n\n    @media (min-width: ${mediaSizes.desktop}) {\n        margin-right: 109px;\n    }\n`\n\nexport const RecipeIngText = styled.p`\n    margin-left: 10px;\n    @media (min-width: ${mediaSizes.tablet}) {\n        margin-left: 40px;\n    }\n\n    @media (min-width: ${mediaSizes.desktop}) {\n        margin-left: 40px;\n    }\n`\n\nexport const IngItem = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    padding: 0px 32px;\n    isolation: isolate;\n    height: 86px;\n    background: ${colors.imageBC};\n    border-radius: 8px;\n    justify-content: space-between;\n    margin-bottom: 16px;\n\n    @media (min-width: ${mediaSizes.tablet}) {\n        height: 178px;\n        margin-bottom: 24px;\n        align-items: center;\n    }\n\n    @media (min-width: ${mediaSizes.desktop}) {\n        height: 182px;\n    }\n`\n\nexport const IngImage = styled.img`\n    width: 57px;\n    height: 57px;\n\n    @media (min-width: ${mediaSizes.tablet}) {\n        width: 112px;\n        height: 112px;\n    }\n\n    @media (min-width: ${mediaSizes.desktop}) {\n        width: 128px;\n        height: 128px;\n    }\n`\n\nexport const IngItemName = styled.div`\n    display: flex;\n    flex-direction: row;\n    gap: 8px;\n    font-family: 'Poppins', sans-serif;\n    font-style: normal;\n    font-weight: 500;\n    font-size: 12px;\n    line-height: 14px;\n\n    letter-spacing: -0.24px;\n\n    color: ${colors.recipeCardText};\n    align-items: center;\n\n    @media (min-width: ${mediaSizes.tablet}) {\n        gap: 40px;\n        font-weight: 500;\n        font-size: 24px;\n        line-height: 24px;\n    }\n\n    @media (min-width: ${mediaSizes.desktop}) {\n        gap: 66px;\n    }\n`\n\nexport const IngItemDeskr = styled.div`\n    display: flex;\n    flex-direction: row;\n    gap: 28px;\n    margin-right: 28px;\n    @media (min-width: ${mediaSizes.tablet}) {\n        gap: 78px;\n    }\n\n    @media (min-width: ${mediaSizes.desktop}) {\n        gap: 150px;\n    }\n`\n\nexport const IngInput = styled.input`\n    border: 2px solid rgba(126, 126, 126, 0.5);\n    border-radius: 4px;\n    background: transparent;\n    width: 18px;\n    height: 18px;\n    position: relative;\n    appearance: none;\n\n    &:before {\n        content: '✓';\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n        font-size: 21px;\n        color: ${colors.greenButton};\n        opacity: 0;\n        transition: opacity 0.2s ease-in-out;\n    }\n\n    &:checked:before {\n    opacity: 1;\n    }\n\n    @media (min-width: ${mediaSizes.tablet}) {\n        width: 35px;\n        height: 35px;\n    }\n`\n\nexport const IngAmount = styled.div`\n    min-width: 63px;\n    height: 23px;\n    padding: 7px;\n    background: ${colors.greenButton};\n    border-radius: 4px;\n    font-size: 12px;\n    color: ${colors.whiteColor};\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    @media (min-width: ${mediaSizes.tablet}) {\n        min-width: 68px;\n        height: 36px;\n        font-size: 16px;\n    }\n\n    @media (min-width: ${mediaSizes.desktop}) {\n        min-width: 68px;\n        height: 35px;\n    }\n`\nexport const RecipeDescr = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n\n    @media (min-width: ${mediaSizes.tablet}) {\n        flex-direction: column;\n    }\n\n    @media (min-width: ${mediaSizes.desktop}) {\n        flex-direction: row;\n    }\n`\nexport const PreparationTitle = styled.h3`\n    font-family: 'Poppins', sans-serif;\n    font-style: normal;\n    font-weight: 600;\n    font-size: 24px;\n    line-height: 24px;\n\n    letter-spacing: -0.24px;\n\n    color: ${colors.recipeCardText};\n    margin-bottom: 33px;\n`\n\nexport const PreparationItem = styled.li`\n    font-family: 'Poppins', sans-serif;\n    font-style: normal;\n    font-weight: 400;\n    font-size: 12px;\n    line-height: 14px;\n\n    letter-spacing: -0.02em;\n\n    color: ${colors.blackFontBolt};\n    margin-bottom: 21px;\n    position: relative;\n    counter-increment: custom-counter;\n\n    @media (min-width: ${mediaSizes.tablet}) {\n        font-size: 14px;\n        line-height: 18px;\n    }\n`\n\nexport const CustomNumbering = styled.div`\n  &::before {\n    content: counter(custom-counter);\n    position: absolute;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 10px 12px 12px;\n    gap: 10px;\n    isolation: isolate;\n\n    width: 21px;\n    height: 21px;\n\n    background: ${colors.greenButton};\n    border-radius: 100px;\n    color: ${colors.whiteColor};\n  }\n`\n\nexport const PreparationText = styled.p`\n  margin-left: 35px;\n`\nexport const PreparationImg = styled.img`\n    width: 343px;\n    height: 250px;\n\n@media (min-width: ${mediaSizes.tablet}) {\n    width: 433px;\n    height: 332px;\n}\n`\n\nexport const ScrollContainer = styled(PerfectScrollbar)`\n  max-height: 332px;\n  max-width: 343px;\n  overflow-x: hidden;\n\n  .ps__rail-x {\n    display: none;\n  }\n\n  .ps__rail-y {\n    width: 15px;\n    background-color: transparent;\n    opacity: 0.6;\n\n    &:hover {\n      opacity: 1;\n    }\n\n    .ps__thumb-y {\n      width: 100%;\n      background-color: ${colors.primary};\n      opacity: 0.8;\n\n      &:hover {\n        opacity: 1;\n      }\n    }\n  }\n  @media (min-width: ${mediaSizes.tablet}) {\n    max-width: 704px;\n}\n`;","export const selectRecipeById = state => state.recipesId.recipeById;\n","export const selectFavRecipes = state => state.favoriteRecipes.recipes;","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchRecipeById } from '../../redux/id-recipes/operations'; \nimport { RecipeTitle, RecipeText, RecipeTiming, RecipeWrapper } from './Recipes.styled';\nimport { selectRecipeById } from 'redux/id-recipes/selectors';\nimport { selectFavRecipes } from 'redux/favorite/selectors';\nimport { Loader } from 'components/Loader/Loader'; \nimport { addFavoriteRecipe, deleteFavoriteRecipe } from 'redux/favorite/operations';\nimport { useParams } from 'react-router-dom';\n\nconst RecipesHero = () => {\n\n    const [isRecipeInFavorites, setIsRecipeInFavorites] = useState(false);\n\n    const dispatch = useDispatch();\n  const recipe = useSelector(selectRecipeById);\n  const { recipeId } = useParams();\n\n  useEffect(() => {\n    dispatch(fetchRecipeById(recipeId));\n  }, [dispatch, recipeId]);\n\n  const handleAddToFavorites = () => {\n    dispatch(addFavoriteRecipe(recipeId));\n    setIsRecipeInFavorites(true);\n  };\n\n  const handleRemoveFromFavorites = () => {\n    dispatch(deleteFavoriteRecipe(recipeId));\n    setIsRecipeInFavorites(false);\n  };\n\n  const favoriteRecipes = useSelector(selectFavRecipes);\n    useEffect(() => {\n        const isFavorite = favoriteRecipes.some(recipe => recipe._id === recipeId);\n        setIsRecipeInFavorites(isFavorite);\n    }, [favoriteRecipes, recipeId]);\n\n\n  if (!recipe) {\n    return <Loader />;\n  }\n\n\n    return(\n            <RecipeWrapper>\n                <div>\n                    <RecipeTitle>{recipe.title}</RecipeTitle>\n                    <RecipeText>{recipe.description}</RecipeText>\n                </div>\n                <div>\n                {isRecipeInFavorites ? (\n                <button className=\"btn recipesbtn\" onClick={handleRemoveFromFavorites}>\n                    Remove from favorite\n                </button>\n                ) : (\n                <button className=\"btn recipesbtn\" onClick={handleAddToFavorites}>\n                    Add to favorite recipes\n                </button>\n                )}         \n                    <RecipeTiming>\n                        <svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" className=\"mr-1 w-3.5 h-3.5\">\n                            <g clipPath=\"url(#clip0_264_756)\">\n                            <path d=\"M6.99935 12.8334C10.221 12.8334 12.8327 10.2217 12.8327 7.00002C12.8327 3.77836 10.221 1.16669 6.99935 1.16669C3.77769 1.16669 1.16602 3.77836 1.16602 7.00002C1.16602 10.2217 3.77769 12.8334 6.99935 12.8334Z\" stroke=\"#23262A\" strokeWidth=\"1.3\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\n                            <path d=\"M7 3.5V7L9.33333 8.16667\" stroke=\"#23262A\" strokeWidth=\"1.3\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\n                            </g>\n                            <defs>\n                            <clipPath id=\"clip0_264_756\">\n                                <rect width=\"14\" height=\"14\" fill=\"white\"></rect>\n                            </clipPath>\n                            </defs>\n                        </svg>\n                        <p>{recipe.time} min</p>\n                    </RecipeTiming>\n                </div>\n            </RecipeWrapper>\n    )  \n    \n}\n\nexport default RecipesHero;","import {\n  IngItem,\n  IngImage,\n  IngItemName,\n  IngItemDeskr,\n  IngInput,\n  IngAmount,\n} from './Recipes.styled';\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchRecipeById } from '../../redux/id-recipes/operations';\nimport { selectRecipeById } from '../../redux/id-recipes/selectors';\nimport { Loader } from 'components/Loader/Loader';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\n\nexport const IngredientList = () => {\n  const dispatch = useDispatch();\n  const recipe = useSelector(selectRecipeById);\n\n  const { recipeId } = useParams();\n\n  useEffect(() => {\n    dispatch(fetchRecipeById(recipeId));\n  }, [dispatch, recipeId]);\n\n  if (!recipe) {\n    return <Loader />;\n  }\n\n  const handleCheckboxChange = async (ingredient, measure) => {\n    try {\n      const payload = {\n        ingredientId: ingredient._id,\n        recipeId: recipeId,\n        measure,\n      };\n\n      await axios.patch('/users/shopping-list/add', payload);\n    } catch (error) {\n      console.log('Помилка під час виконання запиту:', error);\n    }\n  };\n\n  if (!recipe.ingredients) {\n    return <Loader />;\n  }\n\n  return (\n    <>\n      {recipe.ingredients &&\n        recipe.ingredients?.map((ingredient, index) => (\n          <IngItem key={index}>\n            <IngItemName>\n              <IngImage alt=\"ingredient_photo\" src={ingredient.id.img} />\n              <p>{ingredient.id.name}</p>\n            </IngItemName>\n            <IngItemDeskr>\n              <IngAmount>\n                <p>{ingredient.measure}</p>\n              </IngAmount>\n              <div>\n                <IngInput\n                  type=\"checkbox\"\n                  onChange={() =>\n                    handleCheckboxChange(ingredient.id, ingredient.measure)\n                  }\n                />\n              </div>\n            </IngItemDeskr>\n          </IngItem>\n        ))}\n    </>\n  );\n};\n","import React from 'react';\nimport {IngredientList} from './IngredientList'\nimport {RecipeIngContainer, RecipeIngTable, IngTable, IngText, RecipeIngText} from './Recipes.styled'\n\n\nconst RecipesIngredients = () => {\n    return(\n      <>\n        <RecipeIngContainer>\n          <RecipeIngTable>\n              <RecipeIngText>Ingredients</RecipeIngText>\n            <IngTable>\n                <IngText>Number</IngText>\n                <p>Add to list</p>\n            </IngTable>\n          </RecipeIngTable>\n          <IngredientList />\n        </RecipeIngContainer>\n      </>\n    )  \n    \n}\n\nexport default RecipesIngredients;","import { RecipeDescr, PreparationImg, RecipeIngContainer, PreparationTitle, PreparationItem, CustomNumbering, PreparationText, ScrollContainer } from './Recipes.styled';\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchRecipeById } from '../../redux/id-recipes/operations'; \nimport { selectRecipeById } from 'redux/id-recipes/selectors';\nimport { Loader } from 'components/Loader/Loader';\nimport { useParams } from 'react-router-dom';\n\nconst RecipesPreparation = () => {\n\n    const dispatch = useDispatch();\n    const recipe = useSelector(selectRecipeById);\n  \n    const { recipeId } = useParams();\n  \n    useEffect(() => {\n      dispatch(fetchRecipeById(recipeId));\n    }, [dispatch, recipeId]);\n  \n    if (!recipe) {\n        return <Loader/>;\n    }\n\n    const instructions = recipe.instructions ? recipe.instructions.split('\\r\\n') : [];\n\n    //const instructions = recipe && recipe.instructions ? recipe.instructions.split('.') : [];\n    return(\n            <RecipeIngContainer>\n                <RecipeDescr>\n                    <div>\n                        <PreparationTitle>Recipe Preparation</PreparationTitle>\n                            <ScrollContainer>\n                                <ul>\n                                    {instructions.map((instruction, index) => (\n                                            <PreparationItem key={index}>\n                                                <CustomNumbering>\n                                                    <PreparationText>{instruction}</PreparationText>\n                                                </CustomNumbering>\n                                            </PreparationItem>\n                                    ))}\n                                </ul>\n                            </ScrollContainer>\n                    </div>\n                    <div>\n                        <PreparationImg\n                            alt=\"ingredient_photo\"\n                            width=\"433px\"\n                            height=\"332px\"\n                            src={recipe.preview}\n                        />\n                    </div>\n                </RecipeDescr>\n            </RecipeIngContainer>\n    )  \n    \n}\n\nexport default RecipesPreparation;","import { Wrapper, Assortment } from './Background.styled';\n\nexport const Background = () => {\n  return (\n    <Wrapper>\n      <Assortment></Assortment>\n    </Wrapper>\n  );\n};\n","import RecipesHero from 'components/Recipes/RecipesHero';\nimport RecipesIngredients from 'components/Recipes/RecipesIngred';\nimport RecipesPreparation from 'components/Recipes/RecipesPreparation';\nimport { Background } from '../components/Background/Background';\n\nconst Recipes = () => {\n  return (\n    <>\n      <Background />\n      <RecipesHero />\n      <RecipesIngredients />\n      <RecipesPreparation />\n    </>\n  );\n};\n\nexport default Recipes;\n"],"names":["RecipeWrapper","styled","mediaSizes","RecipeTitle","colors","RecipeText","RecipeTiming","RecipeIngContainer","RecipeIngTable","IngTable","IngText","RecipeIngText","IngItem","IngImage","IngItemName","IngItemDeskr","IngInput","IngAmount","RecipeDescr","PreparationTitle","PreparationItem","CustomNumbering","PreparationText","PreparationImg","ScrollContainer","PerfectScrollbar","selectRecipeById","state","recipesId","recipeById","selectFavRecipes","favoriteRecipes","recipes","useState","isRecipeInFavorites","setIsRecipeInFavorites","dispatch","useDispatch","recipe","useSelector","recipeId","useParams","useEffect","fetchRecipeById","isFavorite","some","_id","title","description","className","onClick","deleteFavoriteRecipe","addFavoriteRecipe","width","height","viewBox","fill","xmlns","clipPath","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","id","time","Loader","IngredientList","handleCheckboxChange","ingredient","measure","payload","ingredientId","axios","console","log","ingredients","map","index","alt","src","img","name","type","onChange","instructions","split","instruction","preview","Background","RecipesIngred"],"sourceRoot":""}