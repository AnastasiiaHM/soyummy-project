{"version":3,"file":"static/js/476.05b5e469.chunk.js","mappings":"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","sources":["components/Recipes/Recipes.styled.jsx","redux/id-recipes/selectors.js","redux/favorite/selectors.js","components/Recipes/RecipesHero.jsx","redux/shopping-list/selectors.js","components/Recipes/IngredientList.jsx","components/Recipes/RecipesIngred.jsx","components/Recipes/RecipesPreparation.jsx","components/Background/Background.jsx","pages/Recipes.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { mediaSizes } from 'components/constants';\nimport { colors } from '../colors';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n\nexport const RecipeWrapper = styled.div`\n    width: 343px;\n    margin: 0 auto;\n    margin-top: 80px;\n\n    @media (min-width: ${mediaSizes.tablet}) and (max-width: ${mediaSizes.desktop}) {\n    width: 704px;\n    margin: 0 auto;\n    margin-top: 0px;\n    }\n\n    @media (min-width: ${mediaSizes.desktop}) {\n    width: 1240px;\n    margin: 0 auto;\n    margin-top: 64px;\n    }\n`;\n\nexport const RecipeTitle = styled.h2`\n    font-family: 'Poppins', sans-serif;\n    font-style: normal;\n    font-weight: 600;\n    font-size: 24px;\n    line-height: 24px;\n    text-align: center;\n    letter-spacing: -0.02em;\n  \n\n\n    color: ${colors.greenButton};\n\n    @media (min-width: ${mediaSizes.tablet}) {\n        font-size: 44px;\n        line-height: 44px;\n        margin-top: 72px;\n\n    }\n\n    @media (min-width: ${mediaSizes.desktop}) {\n        margin-top: 100px;\n\n    }\n`;\n\nexport const RecipeText = styled.p`\n    font-family: 'Poppins', sans-serif;\n    font-style: normal;\n    font-weight: 400;\n    font-size: 12px;\n    line-height: 16px;\n\n    text-align: center;\n    letter-spacing: -0.02em;\n\n    color: ${colors.blackFont};\n    \n    width: 299px;\n    height: 64px;\n    margin: 0 auto;\n    margin-top: 18px;\n\n    @media (min-width: ${mediaSizes.tablet}) {\n        font-size: 18px;\n        line-height: 24px;\n\n        width: 656px;\n        height: 72px;\n        margin-top: 30px;\n    }\n`;\n\nexport const RecipeTiming = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-top: 48px;\n    margin-bottom: 82px;\n    gap: 10px;\n    color: ${colors.blackFont};\n\n    @media (min-width: ${mediaSizes.tablet}) and (max-width: ${mediaSizes.desktop}) {\n        margin-bottom: 55px;\n    }\n\n    @media (min-width: ${mediaSizes.desktop}) {\n        \n        margin-bottom: 25px;\n    }\n`;\n\nexport const RecipeIngContainer = styled.div`\n    width: 343px;\n    margin: 0 auto;\n    margin-top: 32px;\n    margin-bottom: 100px;\n\n    @media (min-width: ${mediaSizes.tablet}) {\n        width: 704px;\n        margin: 0 auto;\n        margin-bottom: 200px;\n    }\n\n    @media (min-width: ${mediaSizes.desktop}) {\n        width: 1240px;\n        margin-top: 50px;\n    }\n`\n\nexport const RecipeIngTable = styled.div`\n    display: flex;\n    left: 0px;\n    right: 0px;\n    top: 0px;\n    height: 32px;\n    background: ${colors.greenButton};\n    border-radius: 8px;\n\n    font-family: 'Poppins', sans-serif;\n    font-style: normal;\n    font-weight: 600;\n    font-size: 10px;\n    line-height: 15px;\n    align-items: center;\n    letter-spacing: 0.03em;\n    color: ${colors.textGreenBtn};\n    margin-bottom: 24px;\n\n    @media (min-width: ${mediaSizes.tablet}) {\n        height: 60px;\n        font-size: 18px;\n        line-height: 27px;\n        margin-bottom: 32px\n    }\n\n    @media (min-width: ${mediaSizes.desktop}) {\n        height: 60px;\n        margin-bottom: 50px;\n        font-size: 18px;\n        line-height: 27px;\n    }\n`\n\nexport const IngTable = styled.div`\n    display: flex;\n    margin-left: 122px;\n\n    @media (min-width: ${mediaSizes.tablet}) {\n        margin-left: 312px;\n    }\n\n    @media (min-width: ${mediaSizes.desktop}) {\n        margin-left: 761px;\n    }\n`\n\nexport const IngText = styled.p`\n    margin-right: 18px;\n\n    @media (min-width: ${mediaSizes.tablet}) {\n        margin-right: 38px;\n    }\n\n    @media (min-width: ${mediaSizes.desktop}) {\n        margin-right: 109px;\n    }\n`\n\nexport const RecipeIngText = styled.p`\n    margin-left: 10px;\n    @media (min-width: ${mediaSizes.tablet}) {\n        margin-left: 40px;\n    }\n\n    @media (min-width: ${mediaSizes.desktop}) {\n        margin-left: 40px;\n    }\n`\n\nexport const IngItem = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    padding: 0px 32px;\n    isolation: isolate;\n    height: 86px;\n    background: ${colors.imageBC};\n    border-radius: 8px;\n    justify-content: space-between;\n    margin-bottom: 16px;\n\n    @media (min-width: ${mediaSizes.tablet}) {\n        height: 178px;\n        margin-bottom: 24px;\n        align-items: center;\n    }\n\n    @media (min-width: ${mediaSizes.desktop}) {\n        height: 182px;\n    }\n`\n\nexport const IngImage = styled.img`\n    width: 57px;\n    height: 57px;\n\n    @media (min-width: ${mediaSizes.tablet}) {\n        width: 112px;\n        height: 112px;\n    }\n\n    @media (min-width: ${mediaSizes.desktop}) {\n        width: 128px;\n        height: 128px;\n    }\n`\n\nexport const IngItemName = styled.div`\n    display: flex;\n    flex-direction: row;\n    gap: 8px;\n    font-family: 'Poppins', sans-serif;\n    font-style: normal;\n    font-weight: 500;\n    font-size: 12px;\n    line-height: 14px;\n\n    letter-spacing: -0.24px;\n\n    color: ${colors.recipeCardText};\n    align-items: center;\n\n    @media (min-width: ${mediaSizes.tablet}) {\n        gap: 40px;\n        font-weight: 500;\n        font-size: 24px;\n        line-height: 24px;\n    }\n\n    @media (min-width: ${mediaSizes.desktop}) {\n        gap: 66px;\n    }\n`\n\nexport const IngItemDeskr = styled.div`\n    display: flex;\n    flex-direction: row;\n    gap: 28px;\n    margin-right: 28px;\n    @media (min-width: ${mediaSizes.tablet}) {\n        gap: 78px;\n    }\n\n    @media (min-width: ${mediaSizes.desktop}) {\n        gap: 150px;\n    }\n`\n\nexport const IngInput = styled.input`\n    border: 2px solid rgba(126, 126, 126, 0.5);\n    border-radius: 4px;\n    background: transparent;\n    width: 18px;\n    height: 18px;\n    position: relative;\n    appearance: none;\n    cursor: pointer;\n\n    &:before {\n        content: '✓';\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n        font-size: 21px;\n        color: ${colors.greenButton};\n        opacity: 0;\n        transition: opacity 0.2s ease-in-out;\n    }\n\n    &:checked:before {\n    opacity: 1;\n    }\n\n    @media (min-width: ${mediaSizes.tablet}) {\n        width: 35px;\n        height: 35px;\n    }\n`\n\nexport const IngAmount = styled.div`\n    min-width: 63px;\n    height: 23px;\n    padding: 7px;\n    background: ${colors.greenButton};\n    border-radius: 4px;\n    font-size: 12px;\n    color: ${colors.whiteColor};\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    @media (min-width: ${mediaSizes.tablet}) {\n        min-width: 68px;\n        height: 36px;\n        font-size: 16px;\n    }\n\n    @media (min-width: ${mediaSizes.desktop}) {\n        min-width: 68px;\n        height: 35px;\n    }\n`\nexport const RecipeDescr = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n\n    @media (min-width: ${mediaSizes.tablet}) {\n        flex-direction: column;\n    }\n\n    @media (min-width: ${mediaSizes.desktop}) {\n        flex-direction: row;\n    }\n`\nexport const PreparationTitle = styled.h3`\n    font-family: 'Poppins', sans-serif;\n    font-style: normal;\n    font-weight: 600;\n    font-size: 24px;\n    line-height: 24px;\n\n    letter-spacing: -0.24px;\n\n    color: ${colors.recipeCardText};\n    margin-bottom: 33px;\n`\n\nexport const PreparationItem = styled.li`\n    font-family: 'Poppins', sans-serif;\n    font-style: normal;\n    font-weight: 400;\n    font-size: 12px;\n    line-height: 14px;\n\n    letter-spacing: -0.02em;\n\n    color: ${colors.blackFontBolt};\n    margin-bottom: 21px;\n    position: relative;\n    counter-increment: custom-counter;\n\n    @media (min-width: ${mediaSizes.tablet}) {\n        font-size: 14px;\n        line-height: 18px;\n    }\n`\n\nexport const CustomNumbering = styled.div`\n  &::before {\n    content: counter(custom-counter);\n    position: absolute;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 10px 12px 12px;\n    gap: 10px;\n    isolation: isolate;\n\n    width: 21px;\n    height: 21px;\n\n    background: ${colors.greenButton};\n    border-radius: 100px;\n    color: ${colors.whiteColor};\n  }\n`\n\nexport const PreparationText = styled.p`\n  margin-left: 35px;\n`\nexport const PreparationImg = styled.img`\n    width: 343px;\n    height: 250px;\n\n@media (min-width: ${mediaSizes.tablet}) {\n    width: 433px;\n    height: 332px;\n}\n`\n\nexport const ScrollContainer = styled(PerfectScrollbar)`\n  max-height: 332px;\n  max-width: 343px;\n  overflow-x: hidden;\n\n  .ps__rail-x {\n    display: none;\n  }\n\n  .ps__rail-y {\n    width: 15px;\n    background-color: transparent;\n    opacity: 0.6;\n\n    &:hover {\n      opacity: 1;\n    }\n\n    .ps__thumb-y {\n      width: 100%;\n      background-color: ${colors.primary};\n      opacity: 0.8;\n\n      &:hover {\n        opacity: 1;\n      }\n    }\n  }\n  @media (min-width: ${mediaSizes.tablet}) {\n    max-width: 704px;\n}\n`;","export const selectRecipeById = state => state.recipesId.recipeById;\n","export const selectFavRecipes = state => state.favoriteRecipes.recipes;","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  RecipeTitle,\n  RecipeText,\n  RecipeTiming,\n  RecipeWrapper,\n} from './Recipes.styled';\nimport { selectRecipeById } from 'redux/id-recipes/selectors';\n\nimport { Loader } from 'components/Loader/Loader';\nimport {\n  addFavoriteRecipe,\n  deleteFavoriteRecipe,\n} from 'redux/favorite/operations';\nimport { useParams } from 'react-router-dom';\nimport { selectFavRecipes } from 'redux/favorite/selectors';\n\nconst RecipesHero = () => {\n  const [isRecipeInFavorites, setIsRecipeInFavorites] = useState(false);\n\n  const dispatch = useDispatch();\n  const recipe = useSelector(selectRecipeById);\n  const { recipeId } = useParams();\n\n  const handleAddToFavorites = () => {\n    dispatch(addFavoriteRecipe(recipeId));\n    setIsRecipeInFavorites(true);\n  };\n\n  const handleRemoveFromFavorites = () => {\n    dispatch(deleteFavoriteRecipe(recipeId));\n    setIsRecipeInFavorites(false);\n  };\n\n  const favoriteRecipes = useSelector(selectFavRecipes);\n  useEffect(() => {\n    const isFavorite = favoriteRecipes.some(recipe => recipe._id === recipeId);\n    setIsRecipeInFavorites(isFavorite);\n  }, [favoriteRecipes, recipeId]);\n\n  if (!recipe) {\n    return <Loader />;\n  }\n\n  return (\n    <RecipeWrapper>\n      <div>\n        <RecipeTitle>{recipe.title}</RecipeTitle>\n        <RecipeText>{recipe.description}</RecipeText>\n      </div>\n      <div>\n        {isRecipeInFavorites ? (\n          <button\n            className=\"btn recipesbtn\"\n            onClick={handleRemoveFromFavorites}\n          >\n            Remove from favorite\n          </button>\n        ) : (\n          <button className=\"btn recipesbtn\" onClick={handleAddToFavorites}>\n            Add to favorite recipes\n          </button>\n        )}\n        <RecipeTiming>\n          <svg\n            width=\"14\"\n            height=\"14\"\n            viewBox=\"0 0 14 14\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"mr-1 w-3.5 h-3.5\"\n          >\n            <g clipPath=\"url(#clip0_264_756)\">\n              <path\n                d=\"M6.99935 12.8334C10.221 12.8334 12.8327 10.2217 12.8327 7.00002C12.8327 3.77836 10.221 1.16669 6.99935 1.16669C3.77769 1.16669 1.16602 3.77836 1.16602 7.00002C1.16602 10.2217 3.77769 12.8334 6.99935 12.8334Z\"\n                stroke=\"#23262A\"\n                strokeWidth=\"1.3\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              ></path>\n              <path\n                d=\"M7 3.5V7L9.33333 8.16667\"\n                stroke=\"#23262A\"\n                strokeWidth=\"1.3\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              ></path>\n            </g>\n            <defs>\n              <clipPath id=\"clip0_264_756\">\n                <rect width=\"14\" height=\"14\" fill=\"white\"></rect>\n              </clipPath>\n            </defs>\n          </svg>\n          <p>{recipe.time} min</p>\n        </RecipeTiming>\n      </div>\n    </RecipeWrapper>\n  );\n};\n\nexport default RecipesHero;\n","export const selectShoppingList = state => state.shoppingList.shoppingList;\n","import {\n  IngItem,\n  IngImage,\n  IngItemName,\n  IngItemDeskr,\n  IngInput,\n  IngAmount,\n} from './Recipes.styled';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchRecipeById } from '../../redux/id-recipes/operations';\nimport { selectRecipeById } from '../../redux/id-recipes/selectors';\nimport { Loader } from 'components/Loader/Loader';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { selectShoppingList } from '../../redux/shopping-list/selectors';\n\nexport const IngredientList = () => {\n  const dispatch = useDispatch();\n  const recipe = useSelector(selectRecipeById);\n  const shoppingList = useSelector(selectShoppingList);\n  const { recipeId } = useParams();\n\n  const [checkedIngredients, setCheckedIngredients] = useState([]);\n\n  useEffect(() => {\n    dispatch(fetchRecipeById(recipeId));\n  }, [dispatch, recipeId]);\n\n  useEffect(() => {\n    if (shoppingList && recipe) {\n      const recipeIngredientIds = recipe.ingredients.map(\n        (ingredient) => ingredient.id._id\n      );\n      const checked = recipeIngredientIds.filter((ingredientId) =>\n        shoppingList.some((item) => item.ingredientId === ingredientId)\n      );\n      setCheckedIngredients(checked);\n    }\n  }, [shoppingList, recipe]);\n\n  if (!recipe) {\n    return <Loader />;\n  }\n\n  const handleCheckboxChange = async (ingredient, measure) => {\n    try {\n      if (checkedIngredients.includes(ingredient._id)) {\n        // Remove ingredient from shopping list\n        const payload = {\n          ingredientId: ingredient._id,\n        };\n        await axios.patch('/users/shopping-list/remove', payload);\n        setCheckedIngredients((prevChecked) =>\n          prevChecked.filter((id) => id !== ingredient._id)\n        );\n      } else {\n        const payload = {\n          ingredientId: ingredient._id,\n          recipeId: recipeId,\n          measure,\n        };\n        await axios.patch('/users/shopping-list/add', payload);\n        setCheckedIngredients((prevChecked) => [...prevChecked, ingredient._id]);\n      }\n    } catch (error) {\n      console.log('Error executing request:', error);\n    }\n  };\n\n  return (\n    <>\n      {recipe.ingredients &&\n        recipe.ingredients.map((ingredient, index) => (\n          <IngItem key={index}>\n            <IngItemName>\n              <IngImage alt=\"ingredient_photo\" src={ingredient.id.img} />\n              <p>{ingredient.id.name}</p>\n            </IngItemName>\n            <IngItemDeskr>\n              <IngAmount>\n                <p>{ingredient.measure}</p>\n              </IngAmount>\n              <div>\n                <IngInput\n                  type=\"checkbox\"\n                  checked={checkedIngredients.includes(ingredient.id._id)}\n                  onChange={() =>\n                    handleCheckboxChange(ingredient.id, ingredient.measure)\n                  }\n                />\n              </div>\n            </IngItemDeskr>\n          </IngItem>\n        ))}\n    </>\n  );\n};","import React from 'react';\nimport {IngredientList} from './IngredientList'\nimport {RecipeIngContainer, RecipeIngTable, IngTable, IngText, RecipeIngText} from './Recipes.styled'\n\n\nconst RecipesIngredients = () => {\n    return(\n      <>\n        <RecipeIngContainer>\n          <RecipeIngTable>\n              <RecipeIngText>Ingredients</RecipeIngText>\n            <IngTable>\n                <IngText>Number</IngText>\n                <p>Add to list</p>\n            </IngTable>\n          </RecipeIngTable>\n          <IngredientList />\n        </RecipeIngContainer>\n      </>\n    )  \n    \n}\n\nexport default RecipesIngredients;","import {\n  RecipeDescr,\n  PreparationImg,\n  RecipeIngContainer,\n  PreparationTitle,\n  PreparationItem,\n  CustomNumbering,\n  PreparationText,\n  ScrollContainer,\n} from './Recipes.styled';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { selectRecipeById } from 'redux/id-recipes/selectors';\nimport { Loader } from 'components/Loader/Loader';\n\nconst RecipesPreparation = () => {\n  const recipe = useSelector(selectRecipeById);\n\n  if (!recipe) {\n    return <Loader />;\n  }\n\n  const instructions = recipe.instructions\n    ? recipe.instructions.split('\\r\\n')\n    : [];\n\n  return (\n    <RecipeIngContainer>\n      <RecipeDescr>\n        <div>\n          <PreparationTitle>Recipe Preparation</PreparationTitle>\n          <ScrollContainer>\n            <ul>\n              {instructions.map((instruction, index) => (\n                <PreparationItem key={index}>\n                  <CustomNumbering>\n                    <PreparationText>{instruction}</PreparationText>\n                  </CustomNumbering>\n                </PreparationItem>\n              ))}\n            </ul>\n          </ScrollContainer>\n        </div>\n        <div>\n          <PreparationImg\n            alt=\"ingredient_photo\"\n            width=\"433px\"\n            height=\"332px\"\n            src={recipe.preview}\n          />\n        </div>\n      </RecipeDescr>\n    </RecipeIngContainer>\n  );\n};\n\nexport default RecipesPreparation;\n","import { Wrapper, Assortment } from './Background.styled';\n\nexport const Background = () => {\n  return (\n    <Wrapper>\n      <Assortment></Assortment>\n    </Wrapper>\n  );\n};\n","import RecipesHero from 'components/Recipes/RecipesHero';\nimport RecipesIngredients from 'components/Recipes/RecipesIngred';\nimport RecipesPreparation from 'components/Recipes/RecipesPreparation';\nimport { Background } from '../components/Background/Background';\n\nconst Recipes = () => {\n  return (\n    <>\n      <Background />\n      <RecipesHero />\n      <RecipesIngredients />\n      <RecipesPreparation />\n    </>\n  );\n};\n\nexport default Recipes;\n"],"names":["RecipeWrapper","styled","mediaSizes","RecipeTitle","colors","RecipeText","RecipeTiming","RecipeIngContainer","RecipeIngTable","IngTable","IngText","RecipeIngText","IngItem","IngImage","IngItemName","IngItemDeskr","IngInput","IngAmount","RecipeDescr","PreparationTitle","PreparationItem","CustomNumbering","PreparationText","PreparationImg","ScrollContainer","PerfectScrollbar","selectRecipeById","state","recipesId","recipeById","selectFavRecipes","favoriteRecipes","recipes","useState","isRecipeInFavorites","setIsRecipeInFavorites","dispatch","useDispatch","recipe","useSelector","recipeId","useParams","useEffect","isFavorite","some","_id","title","description","className","onClick","deleteFavoriteRecipe","addFavoriteRecipe","width","height","viewBox","fill","xmlns","clipPath","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","id","time","Loader","selectShoppingList","shoppingList","IngredientList","checkedIngredients","setCheckedIngredients","fetchRecipeById","checked","ingredients","map","ingredient","filter","ingredientId","item","handleCheckboxChange","measure","includes","payload","axios","prevChecked","console","log","index","alt","src","img","name","type","onChange","instructions","split","instruction","preview","Background","RecipesIngred"],"sourceRoot":""}