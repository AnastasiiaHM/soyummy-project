{"version":3,"file":"static/js/567.d60a77f6.chunk.js","mappings":"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","sources":["components/Favorite/Card.jsx","components/Favorite/CardPlaceholder.jsx","components/Favorite/List.styled.jsx","components/Favorite/FavoriteList.jsx","components/Paginator/Paginator.styled.jsx","components/Paginator/Paginator.jsx","components/ShopingList/ShoppingListEmpty/ShoppingListEmpty.styled.jsx","components/ShopingList/ShoppingListEmpty/ShoppingListEmpty.jsx","pages/Favorite/Favorite.jsx","pages/Favorite/Favorite.styled.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport {\n  CardBody,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n  ContainerCard,\n  CookingTime,\n  DeleteButton,\n  DeleteIcon,\n  ImageContainer,\n  PrimaryButton,\n} from './Card.styled';\n\nconst uppPageHandler = () => {\n  window.scrollTo({\n    top: 0,\n    behavior: 'smooth',\n  });\n};\n\nconst Card = ({ card, deleteCard }) => {\n\n  return (\n    <ContainerCard>\n      <ImageContainer>\n        <img src={card.preview} alt=\"\" />\n      </ImageContainer>\n      <CardContent>\n        <CardBody>\n          <CardHeader>\n            <CardTitle>{card.title}</CardTitle>\n            <CardDescription>{card.description}</CardDescription>\n          </CardHeader>\n          <DeleteButton onClick={() => deleteCard(card._id)}>\n            <DeleteIcon />\n          </DeleteButton>\n        </CardBody>\n        <CardFooter>\n          <CookingTime>{card.time} min</CookingTime>\n          <Link to={`/recipe/${card._id}`} onClick={uppPageHandler}>\n            <PrimaryButton>See recipe</PrimaryButton>\n          </Link>\n        </CardFooter>\n      </CardContent>\n    </ContainerCard>\n  );\n};\n\nexport default Card;\n","import {\n  CardBody,\n  CardContent,\n  CardDescriptionPlaceholder,\n  CardFooter,\n  CardHeader,\n  CardTitlePlaceholder,\n  ContainerCard,\n  CookingTimePlaceholder,\n  DeleteButtonPlaceholder,\n  ImagePlaceholder,\n  PrimaryButtonPlaceholder,\n} from './Card.styled';\n\nconst CardPlaceholder = () => {\n  return (\n    <ContainerCard>\n      <ImagePlaceholder variant=\"rectangular\" animation=\"wave\" />\n      <CardContent>\n        <CardBody>\n          <CardHeader>\n            <CardTitlePlaceholder variant=\"text\" animation=\"wave\" />\n            <CardDescriptionPlaceholder variant=\"text\" animation=\"wave\" />\n            <CardDescriptionPlaceholder variant=\"text\" animation=\"wave\" />\n            <CardDescriptionPlaceholder variant=\"text\" animation=\"wave\" />\n          </CardHeader>\n          <DeleteButtonPlaceholder variant=\"rectangular\" animation=\"wave\" />\n        </CardBody>\n        <CardFooter>\n          <CookingTimePlaceholder variant=\"text\" animation=\"wave\" width={60} />\n          <PrimaryButtonPlaceholder variant=\"rectangular\" animation=\"wave\" />\n        </CardFooter>\n      </CardContent>\n    </ContainerCard>\n  );\n};\n\nexport default CardPlaceholder;\n","import styled from '@emotion/styled';\nimport { mediaSizes } from '../constants/media';\n\nexport const List = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 18px;\n  padding-bottom: 40px;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    gap: 40px;\n    padding-bottom: 50px;\n  }\n\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    gap: 50px;\n  }\n`;","import Paginator from 'components/Paginator/Paginator';\nimport Card from './Card';\nimport CardPlaceholder from './CardPlaceholder';\nimport { ShoppingListEmpty } from 'components/ShopingList/ShoppingListEmpty/ShoppingListEmpty';\nimport { List } from './List.styled';\nimport { Title } from 'components/Styled/Shared.styled';\n\nconst RecipesList = ({\n  list,\n  listName,\n  totalPages,\n  page,\n  itemsPerPage,\n  loading,\n  pageChange,\n  deleteCard,\n}) => {\n  return (\n    <>\n      <Title>{listName}</Title>\n\n      {!loading && list?.length === 0 ? (\n        <ShoppingListEmpty message=\"You don't have favourite recipes yet\" />\n      ) : loading ? (\n        <CardPlaceholder itemsCount={itemsPerPage} />\n      ) : (\n        <>\n          <List>\n            {list.map((card, index) => (\n              <Card\n                key={`${card.cardId}-${index}`}\n                card={card}\n                deleteCard={deleteCard}\n              />\n            ))}\n          </List>\n          <Paginator\n            totalPages={totalPages}\n            page={page}\n            pageChange={pageChange}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default RecipesList;\n","import styled from \"@emotion/styled\";\nimport { Pagination } from \"@mui/material\";\nimport { mediaSizes } from \"components/constants\";\n\nexport const StyledPagination = styled(Pagination)`\n  background: ${props => props.theme.recipesBackgroundCard};\n  box-shadow: ${props => props.theme.isDark ? 'none' : '0px 4px 4px rgba(135, 135, 135, 0.2)'};\n  border-radius: 26px;\n  padding: 5px 10px;\n  width: fit-content;\n\n  .MuiPaginationItem-ellipsis,\n  .MuiButtonBase-root {\n    color: ${props => props.theme.textPrimaryDark}!important;\n  }\n\n  .Mui-selected {\n    background-color: ${props => props.theme.constantGreenColor}!important;\n  }\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    padding: 10px 15px;\n  }\n`;\n\nexport const ContainerPagination = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;","import { ContainerPagination, StyledPagination } from './Paginator.styled';\n\nexport const Paginator = ({ totalPages, page, pageChange }) => {\n  const uppPageHandler = newPage => {\n    pageChange(newPage);\n\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n  return totalPages > 1 ? (\n    <ContainerPagination>\n      <StyledPagination\n        count={totalPages}\n        page={page}\n        onChange={(_, newPage) => uppPageHandler(newPage)}\n      />\n    </ContainerPagination>\n  ) : (\n    <></>\n  );\n};\n\nexport default Paginator;\n","import styled from '@emotion/styled';\n\nexport const Wraper = styled.div`\n  padding-top: 50px;\n  padding-bottom: 100px;\n\n  @media (min-width: 768px) and (max-width: 1439px) {\n    padding-bottom: 200px;\n  }\n`;\n\nexport const EmptyImageWrapper = styled.div`\n  padding-bottom: 24px;\n  width: 208px;\n  margin: 0 auto;\n\n  @media (min-width: 768px) {\n    padding-bottom: 32px;\n    width: 350px;\n  }\n`;\n\nexport const EmptyDesc = styled.p`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1;\n  letter-spacing: -0.02em;\n  font-feature-settings: 'liga' off;\n  text-align: center;\n\n  color: ${props => props.theme.placeholderAddRecipes};\n\n  opacity: 0.5;\n\n  @media (min-width: 768px) {\n    font-size: 24px;\n  }\n`;\n","import {\n  EmptyDesc,\n  EmptyImageWrapper,\n  Wraper,\n} from './ShoppingListEmpty.styled';\n\nimport notFoundMobX1 from '../../images/not-found/search-not-found-mob-1x.png';\nimport notFoundMobX2 from '../../images/not-found/search-not-found-mob-2x.png';\n\nimport notFoundTabX1 from '../../images/not-found/search-not-found-tb-1x.png';\nimport notFoundTabX2 from '../../images/not-found/search-not-found-tb-2x.png';\n\nimport notFoundDescX1 from '../../images/not-found/searchNotFound1x.png';\nimport notFoundDescX2 from '../../images/not-found/search-not-found-desc-2x.png';\n\nexport const ShoppingListEmpty = ({ message }) => {\n  return (\n    <Wraper>\n      <EmptyImageWrapper>\n        <picture>\n          <source\n            media=\"(max-width: 767px)\"\n            srcSet={`${notFoundMobX1} 1x, ${notFoundMobX2} 2x`}\n          />\n          <source\n            media=\"(min-width: 768px) and (max-width: 1439px)\"\n            srcSet={`${notFoundTabX1} 1x, ${notFoundTabX2} 2x`}\n          />\n          <source\n            media=\"(min-width: 1440px)\"\n            srcSet={`${notFoundDescX1} 1x, ${notFoundDescX2} 2x`}\n          />\n          <img src={notFoundDescX1} alt=\"not found product\" />\n        </picture>\n      </EmptyImageWrapper>\n      <EmptyDesc>{message}</EmptyDesc>\n    </Wraper>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  deleteFavoriteRecipe,\n  fetchFavoriteRecipes,\n} from 'redux/favorite/operations';\nimport { Message, RecipesContainer } from './Favorite.styled';\nimport RecipesList from 'components/Favorite/FavoriteList';\n\nconst Favorite = () => {\n  const dispatch = useDispatch();\n  let { recipes, totalPages, currentPage, loading, error, itemsPerPage } =\n    useSelector(state => state.favoriteRecipes);\n  const [deletePageChange, setDeletePageChange] = useState(false);\n\n  useEffect(() => {\n    dispatch(fetchFavoriteRecipes(1));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (deletePageChange) {\n      dispatch(fetchFavoriteRecipes(currentPage));\n    }\n\n    setDeletePageChange(false);\n  }, [currentPage, deletePageChange, dispatch]);\n\n  if (error) {\n    return (\n      <Message>\n        Error while retrieving favorite recipes: {error.message}\n      </Message>\n    );\n  }\n\n  const handlePageChange = page => {\n    dispatch(fetchFavoriteRecipes(page));\n  };\n\n  const handleCardDelete = async recipeId => {\n    await dispatch(deleteFavoriteRecipe(recipeId));\n    setDeletePageChange(true);\n  };\n\n  return (\n    <RecipesContainer>\n      <RecipesList\n        list={recipes}\n        listName=\"Favorites\"\n        totalPages={totalPages}\n        page={currentPage}\n        loading={loading}\n        itemsPerPage={itemsPerPage}\n        pageChange={handlePageChange}\n        deleteCard={handleCardDelete}\n      />\n    </RecipesContainer>\n  );\n};\n\nexport default Favorite;\n","import styled from '@emotion/styled';\n\nexport const LoaderContainer = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: center;\n`;\n\nexport const Message = styled.div`\n  text-align: center;\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1;\n  color: ${props => props.theme.titleCategories};\n\n`;\n\nexport const RecipesContainer = styled.div`\n  width: 375px;\n  max-width: 100%;\n\n  padding-bottom: 100px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  margin-left: auto;\n  margin-right: auto;\n\n  @media (min-width: 768px) and (max-width: 1439px) {\n    width: 768px;\n\n    padding-bottom: 200px;\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n\n  @media (min-width: 1440px) {\n    width: 1440px;\n    padding-top: 64px;\n    padding-bottom: 195px;\n    padding-left: 100px;\n    padding-right: 100px;\n  }\n`;\n"],"names":["uppPageHandler","window","scrollTo","top","behavior","card","deleteCard","src","preview","alt","title","description","onClick","_id","time","to","variant","animation","width","List","styled","mediaSizes","list","listName","totalPages","page","itemsPerPage","loading","pageChange","length","itemsCount","map","index","cardId","Paginator","ShoppingListEmpty","message","StyledPagination","Pagination","props","theme","recipesBackgroundCard","isDark","textPrimaryDark","constantGreenColor","ContainerPagination","count","onChange","_","newPage","Wraper","EmptyImageWrapper","EmptyDesc","placeholderAddRecipes","media","srcSet","notFoundMobX1","notFoundMobX2","notFoundTabX1","notFoundTabX2","notFoundDescX1","notFoundDescX2","dispatch","useDispatch","useSelector","state","favoriteRecipes","recipes","currentPage","error","useState","deletePageChange","setDeletePageChange","useEffect","fetchFavoriteRecipes","handleCardDelete","recipeId","deleteFavoriteRecipe","Message","titleCategories","RecipesContainer"],"sourceRoot":""}